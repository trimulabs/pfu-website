<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Xdb.Processing.Queue.SqlServer</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.ConfigurationConnectionStringResolver">
            <summary>
              Resolves connection strings from the configuration.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.ConfigurationConnectionStringResolver.Resolve(System.String)">
            <summary>
              Returns the connection string with the specified name.
            </summary>
            <param name="name">
              The name of the connection string to return.
            </param>
            <returns>
              A <see cref="T:System.String"/> value containing the connection string with the specified name; or <b>null</b> if
              the connection string could not be resolved.
            </returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              There is no connection string with name specified in <paramref name="name"/> parameter.
            </exception>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.Constants">
            <summary>
            Represents a collection of constants used throughout the project.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.Processing.Queue.SqlServer.Constants.DatabaseSchemaName">
            <summary>
            The name of the database schema that contains the database objects used by processing pool implementations.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver">
            <summary>
              Allows a class to implement <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> that maps a connection string name to a
              connection string.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver.Resolve(System.String)">
            <summary>
              Returns the connection string with the specified name.
            </summary>
            <param name="name">
              The name of the connection string to return.
            </param>
            <returns>
              A <see cref="T:System.String"/> value containing the connection string with the specified name; or <b>null</b> if
              the connection string could not be resolved.
            </returns>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.ServiceCollectionExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> interface.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.ServiceCollectionExtensions.UseSqlServerInteractionLiveProcessingPool(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool"/> to the service collection as a singleton instance
            that will be resolved for both <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/> and <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>
            where TKey is <see cref="T:Sitecore.Xdb.Processing.Queue.InteractionKey"/>.
            </summary>
            <param name="serviceCollection">Service collection to add services to.</param>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.ServiceCollectionExtensions.UseSqlServerContactProcessingPool(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool"/> to the service collection as a singleton instance
            that will be resolved for both <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/> and <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>
            where TKey is <see cref="T:Sitecore.Xdb.Processing.Queue.ContactKey"/>.
            </summary>
            <param name="serviceCollection">Service collection to add services to.</param>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool">
            <summary>
              Implements the contact processing pool used for processing contact change notification, targeting Microsoft
              SQL Server 2008.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.#ctor(Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool"/> class.
            </summary>
            <param name="poolDefinition">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition"/> object that contains the basic information about the processing pool.
            </param>
            <param name="settings">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> object that contains the processing pool settings.
            </param>
            <param name="resolver">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that maps a connection string name to a
              connection string.
            </param>
            <param name="performanceCounters">
              The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object to use to update performance counters; or <b>null</b> to disable
              the collection of performance metrics.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="poolDefinition"/>, <paramref name="settings"/>, <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.SchemaName">
            <summary>
              Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the database schema to use when formatting
              database object names.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineAddSingle">
            <summary>
              Gets the name of the stored procedure for adding a single item to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a single item to
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineAddBatch">
            <summary>
              Gets the name of the stored procedure for adding a batch of items to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a batch of items
              to the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineCheckoutSingle">
            <summary>
              Gets the name of the stored procedure for checking out a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineCheckoutBatch">
            <summary>
              Gets the name of the stored procedure for checking out a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineRemoveSingle">
            <summary>
              Gets the name of the stored procedure for removing a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineRemoveBatch">
            <summary>
              Gets the name of the stored procedure for removing a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineGetState">
            <summary>
              Gets the name of the stored procedure for querying the state of the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for quering the state of the
              processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.RoutineClear">
            <summary>
              Gets the name of the stored procedure for removing all items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing all items from
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.PerformanceMetrics">
            <summary>
              Gets an <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to output performance
              metrics.
            </summary>
            <value>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to output performance metrics.
            </value>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.ReadWorkItemKey(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Creates an <see cref="T:Sitecore.Xdb.Processing.Queue.ContactKey"/> object from attributes read from the specified
              <see cref="T:System.Data.SqlClient.SqlDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.SqlClient.SqlDataReader"/> object to read attribute values from.
            </param>
            <returns>
              An <see cref="T:Sitecore.Xdb.Processing.Queue.ContactKey"/> object initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.CreateCommandParametersForKey(Sitecore.Xdb.Processing.Queue.ContactKey)">
            <summary>
              Creates an array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects representing the specified contact work item
              key.
            </summary>
            <param name="key">
              The contact work item key to create <see cref="T:System.Data.SqlClient.SqlParameter"/> objects for.
            </param>
            <returns>
              An array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects containing the parameters representing the contact work
              item key.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.GetSqlMetaDataForKey">
            <summary>
              Gets an array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of an
              contact work item.
            </summary>
            <returns>
              An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of an
              contact work item.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerContactProcessingPool.SetDataRecordKeyValues(Microsoft.SqlServer.Server.SqlDataRecord,Sitecore.Xdb.Processing.Queue.ContactKey)">
            <summary>
              Updates the specified <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> with values from the specified contact work item key.
            </summary>
            <param name="record">
              The <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> to update.
            </param>
            <param name="key">
              The <see cref="T:Sitecore.Xdb.Processing.Queue.ContactKey"/> object providing the values to set on <paramref name="record"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="record"/> or argument <paramref name="key"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerErrorCodes">
            <summary>
              Defines the constants for relevant Microsoft SQL Server error codes.
            </summary>
        </member>
        <member name="F:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerErrorCodes.ErrorPrimaryKeyViolation">
            <summary>
              Error code for a primary key violation (2627).
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool">
            <summary>
              Implements the contact processing pool used for processing contact change notification, targeting Microsoft
              SQL Server 2008.
            </summary>
            <remarks>
              The processing pool supports keys of up to 128 bytes.
            </remarks>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.#ctor(System.Guid,Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool"/> class.
            </summary>
            <param name="id">
              The unique identifier of the processing pool.
            </param>
            <param name="definition">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> object that contains the basic information about the processing pool.
            </param>
            <param name="settings">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> object that contains the processing pool settings.
            </param>
            <param name="resolver">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that maps a connection string name to a
              connection string.
            </param>
            <param name="performanceCounters">
              The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object to use to update performance counters; or <b>null</b> to disable
              the collection of performance metrics.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="settings"/>, <paramref name="definition"/>, <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.Id">
            <summary>
              Gets the unique identifier of the processing pool.
            </summary>
            <value>
              Gets a <see cref="T:System.Guid"/> value that is the unique identifier of the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.SchemaName">
            <summary>
              Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the database schema to use when formatting
              database object names.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineAddSingle">
            <summary>
              Gets the name of the stored procedure for adding a single item to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a single item to
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineAddBatch">
            <summary>
              Gets the name of the stored procedure for adding a batch of items to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a batch of items
              to the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineCheckoutSingle">
            <summary>
              Gets the name of the stored procedure for checking out a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineCheckoutBatch">
            <summary>
              Gets the name of the stored procedure for checking out a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineRemoveSingle">
            <summary>
              Gets the name of the stored procedure for removing a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineRemoveBatch">
            <summary>
              Gets the name of the stored procedure for removing a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineGetState">
            <summary>
              Gets the name of the stored procedure for querying the state of the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for querying the state of the
              processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.RoutineClear">
            <summary>
              Gets the name of the stored procedure for removing all items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing all items from
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.PerformanceMetrics">
            <summary>
              Gets an <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to output performance
              metrics.
            </summary>
            <value>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to output performance metrics.
            </value>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.OnAdd(Sitecore.Xdb.Processing.Queue.WorkItem{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Called by the base class to add a single work item to the processing pool.
            </summary>
            <param name="item">
              The work item to add.
            </param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.DuplicateWorkItemException">
              The specified work item already exists in the processing pool.
            </exception>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="item"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
              The key length of the work item specified exceeds the maximum supported limit.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
              An unexpected error occurred. The original exception can be accessed via the
              <see cref="P:System.Exception.InnerException"/> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.OnAdd(Sitecore.Xdb.Processing.Queue.WorkItemBatch{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Called by the base class to add a batch of work items to the processing pool.
            </summary>
            <param name="items">
              The batch of work items to add.
            </param>
            <returns>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1"/> object containing the results of the operation for the
              individual work items in specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="items"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
              The key length of one or more work items in the specified batch exceeds the maximum supported limit.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
              An unexpected error occurred. The original exception can be accessed via the
              <see cref="P:System.Exception.InnerException"/> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.OnAddAsync(Sitecore.Xdb.Processing.Queue.WorkItem{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Called by the base class to asynchronously add a single work item to the processing pool.
            </summary>
            <param name="item">
              The work item to add.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="item"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
              The key length of the work item specified exceeds the maximum supported limit.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.DuplicateWorkItemException">
              The specified work item already exists in the processing pool.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
              An unexpected error occurred. The original exception can be accessed via the
              <see cref="P:System.Exception.InnerException"/> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.OnAddAsync(Sitecore.Xdb.Processing.Queue.WorkItemBatch{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Called by the base class to asynchronously add a batch of work items to the processing pool.
            </summary>
            <param name="items">
              The batch of work items to add.
            </param>
            <returns>
              A task that represents the asynchronous operation. The task result contains a
              <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1"/> object containing the results of the operation for the individual
              work items in the specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="items"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
              The key length of one or more work items in the specified batch exceeds the maximum supported limit.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
              An unexpected error occurred. The original exception can be accessed via the
              <see cref="P:System.Exception.InnerException"/> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.ReadWorkItemKey(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Creates an <see cref="T:Sitecore.Xdb.Processing.Queue.BinaryKey"/> object from attributes read from the specified
              <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.Common.DbDataReader"/> object to read attribute values from.
            </param>
            <returns>
              An <see cref="T:Sitecore.Xdb.Processing.Queue.BinaryKey"/> object initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandParametersForKey(Sitecore.Xdb.Processing.Queue.BinaryKey)">
            <summary>
              Creates an array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects representing the specified binary work item
              key.
            </summary>
            <param name="key">
              The binary work item key to create <see cref="T:System.Data.SqlClient.SqlParameter"/> objects for.
            </param>
            <returns>
              An array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects containing the parameters representing the binary work
              item key.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="key"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForClear(System.Data.SqlClient.SqlConnection)">
            <summary>
                Creates a database command for removing all work item from the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForGetState(System.Data.SqlClient.SqlConnection)">
            <summary>
                Creates a database command for querying the state of the processing pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.GetSqlMetaDataForKey">
            <summary>
              Gets an array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of a
              binary work item.
            </summary>
            <returns>
              An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of a
              binary work item.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.SetDataRecordKeyValues(Microsoft.SqlServer.Server.SqlDataRecord,Sitecore.Xdb.Processing.Queue.BinaryKey)">
            <summary>
              Updates the specified <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> with values from the specified binary work item key.
            </summary>
            <param name="record">
              The <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> to update.
            </param>
            <param name="key">
              The <see cref="T:Sitecore.Xdb.Processing.Queue.ContactKey"/> object providing the values to set on <paramref name="record"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="record"/> or argument <paramref name="key"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForAdd(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItem{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Creates a database command for adding a single work item to the pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <param name="item">
              The work item to add.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForAdd(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItemBatch{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Creates a database command for adding a batch of work items to the processing pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <param name="items">
              The batch of work items to add.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForCheckout(System.Data.SqlClient.SqlConnection)">
            <summary>
              Creates a database command for checking out a single work item from the pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForCheckout(System.Data.SqlClient.SqlConnection,System.Int16)">
            <summary>
              Creates a database command for checking out a batch of work items from the pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <param name="count">
              The maximum number of work items to check out.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForCheckIn(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItem{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Creates a database command for checking a single work item back into the processing pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <param name="item">
              The work item to check in.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.CreateCommandForCheckIn(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItemBatch{Sitecore.Xdb.Processing.Queue.BinaryKey})">
            <summary>
              Creates a database command for checking in a batch of work items to the pool.
            </summary>
            <param name="connection">
              The database connection to associate with the command.
            </param>
            <param name="items">
              The batch of work item to check in.
            </param>
            <returns>
              A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand"/> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerGenericProcessingPool.AddPoolParameter(System.Data.SqlClient.SqlCommand)">
            <summary>
              Adds a parameter with the unique identifier of the pool to the specified command object.
            </summary>
            <param name="command">
              The <see cref="T:System.Data.SqlClient.SqlCommand"/> to which to add the pool parameter.
            </param>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool">
            <summary>
              Implements the interaction processing pool used for the RDB rebuild process, targeting Microsoft SQL Server 2008.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.#ctor(Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool"/> class.
            </summary>
            <param name="definition">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition"/> object that contains the basic information about the processing pool.
            </param>
            <param name="settings">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> object that contains the processing pool settings.
            </param>
            <param name="resolver">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that maps a connection string name to a
              connection string.
            </param>
            <param name="performanceCounters">
              The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object to use to update performance counters; or <b>null</b> to disable
              the collection of performance metrics.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="settings"/>, <paramref name="definition"/>, <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.SchemaName">
            <summary>
              Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the database schema to use when formatting
              database object names.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineAddSingle">
            <summary>
              Gets the name of the stored procedure for adding a single item to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a single item to
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineAddBatch">
            <summary>
              Gets the name of the stored procedure for adding a batch of items to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a batch of items
              to the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineCheckoutSingle">
            <summary>
              Gets the name of the stored procedure for checking out a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineCheckoutBatch">
            <summary>
              Gets the name of the stored procedure for checking out a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineRemoveSingle">
            <summary>
              Gets the name of the stored procedure for removing a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineRemoveBatch">
            <summary>
              Gets the name of the stored procedure for removing a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineGetState">
            <summary>
              Gets the name of the stored procedure for querying the state of the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for querying the state of the
              processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.RoutineClear">
            <summary>
              Gets the name of the stored procedure for removing all items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing all items from
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionHistoryProcessingPool.PerformanceMetrics">
            <summary>
              Gets an <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used
              to update performance
              counters.
            </summary>
            <value>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to update performance counters.
            </value>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool">
            <summary>
              Implements the interaction processing pool for live processing, targeting Microsoft SQL Server 2008.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.#ctor(Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool"/> class.
            </summary>
            <param name="definition">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition"/> object that contains the basic information about the processing pool.
            </param>
            <param name="settings">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> object that contains the processing pool settings.
            </param>
            <param name="resolver">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that maps a connection string name to a
              connection string.
            </param>
            <param name="performanceCounters">
              The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object to use to update performance counters; or <b>null</b> to
              disable the collection of performance metrics.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="settings"/>, <paramref name="definition"/>, <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.SchemaName">
            <summary>
              Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the database schema to use when formatting
              database object names.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineAddSingle">
            <summary>
              Gets the name of the stored procedure for adding a single item to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a single item to
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineAddBatch">
            <summary>
              Gets the name of the stored procedure for adding a batch of items to the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a batch of items
              to the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineCheckoutSingle">
            <summary>
              Gets the name of the stored procedure for checking out a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineCheckoutBatch">
            <summary>
              Gets the name of the stored procedure for checking out a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for checking out a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineRemoveSingle">
            <summary>
              Gets the name of the stored procedure for removing a single item from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a single
              item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineRemoveBatch">
            <summary>
              Gets the name of the stored procedure for removing a batch of items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a batch of
              items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineGetState">
            <summary>
              Gets the name of the stored procedure for querying the state of the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for quering the state of the
              processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.RoutineClear">
            <summary>
              Gets the name of the stored procedure for removing all items from the processing pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing all items from
              the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionLiveProcessingPool.PerformanceMetrics">
            <summary>
              Gets an <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used
              to update performance counters.
            </summary>
            <value>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.Diagnostics.ProcessingPoolPerformanceMetrics"/> object that can be used to
              update performance counters.
            </value>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool">
            <summary>
              Base class for interaction processing pool implementations targeting Microsoft SQL Server 2008.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool.#ctor(Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool"/> class.
            </summary>
            <param name="definition">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDefinition"/> object that contains the basic information about the processing pool.
            </param>
            <param name="settings">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> object that contains the processing pool settings.
            </param>
            <param name="resolver">
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that maps a connection string name to a
              connection string.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="settings"/>, <paramref name="definition"/>, <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool.ReadWorkItemKey(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Creates an <see cref="T:Sitecore.Xdb.Processing.Queue.InteractionKey"/> object from attributes read from the specified
              <see cref="T:System.Data.SqlClient.SqlDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.SqlClient.SqlDataReader"/> object to read attribute values from.
            </param>
            <returns>
              An <see cref="T:Sitecore.Xdb.Processing.Queue.InteractionKey"/> object initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool.CreateCommandParametersForKey(Sitecore.Xdb.Processing.Queue.InteractionKey)">
            <summary>
              Creates an array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects representing the specified interaction work item
              key.
            </summary>
            <param name="key">
              The interaction work item key to create <see cref="T:System.Data.SqlClient.SqlParameter"/> objects for.
            </param>
            <returns>
              An array of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects containing the parameters representing the interaction
              work item key.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="key"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool.GetSqlMetaDataForKey">
            <summary>
              Gets an array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of an
              interaction work item.
            </summary>
            <returns>
              An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> objects describing the attributes that represent the key of an
              interaction work item.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerInteractionProcessingPool.SetDataRecordKeyValues(Microsoft.SqlServer.Server.SqlDataRecord,Sitecore.Xdb.Processing.Queue.InteractionKey)">
            <summary>
              Updates the specified <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> with values from the specified interaction work item
              key.
            </summary>
            <param name="record">
              The <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> to update.
            </param>
            <param name="key">
              The <see cref="T:Sitecore.Xdb.Processing.Queue.InteractionKey"/> object providing the values to set on <paramref name="record"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="record"/> or argument <paramref name="key"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2">
            <summary>
                Base class for processing pool implementations targeting Microsoft SQL Server 2008.
            </summary>
            <typeparam name="TKey">
                The type that represents the key of the work item.
            </typeparam>
            <typeparam name="TPoolDefinition">
                The type that represents the processing pool definition and specifies basic settings of the pool.
            </typeparam>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.#ctor(`1,Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2" /> class.
            </summary>
            <param name="poolDefinition">
                A <typeparamref name="TPoolDefinition"/> object that specifies basic settings of the processing pool.
            </param>
            <param name="settings">
                A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings" /> object that contains the configuration settings for the
                processing pool.
            </param>
            <param name="resolver">
                A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver" /> object that maps a connection string name to a
                connection string.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="poolDefinition" />, <paramref name="settings" />, <paramref name="resolver" />, or
                <paramref name="retryerRegistry" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                Retryer by specified name is not registered.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.Settings">
            <summary>
                Gets the settings specified for the current processing pool.
            </summary>
            <value>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings" /> object that contains the settings specified for the current
                processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.SchemaName">
            <summary>
                Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the database schema to use when formatting
                database object names.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineAddSingle">
            <summary>
                Gets the name of the stored procedure for adding a single item to the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for adding a single item to
                the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineAddBatch">
            <summary>
                Gets the name of the stored procedure for adding a batch of items to the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for adding a batch of items
                to the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineCheckoutSingle">
            <summary>
                Gets the name of the stored procedure for checking out a single item from the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for checking out a single
                item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineCheckoutBatch">
            <summary>
                Gets the name of the stored procedure for checking out a batch of items from the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for checking out a batch of
                items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineRemoveSingle">
            <summary>
                Gets the name of the stored procedure for removing a single item from the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for removing a single
                item from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineRemoveBatch">
            <summary>
                Gets the name of the stored procedure for removing a batch of items from the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for removing a batch of
                items from the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineGetState">
            <summary>
                Gets the name of the stored procedure for querying the state of the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for querying the state of the
                processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RoutineClear">
            <summary>
                Gets the name of the stored procedure for removing all items from the processing pool.
            </summary>
            <value>
                A <see cref="T:System.String" /> value that contains the name of the stored procedure for removing all items from
                the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.Definition">
            <summary>
                Gets the pool definition specified for the current processing pool.
            </summary>
            <value>
                A <typeparamref name="TPoolDefinition"/> object that specifies basic settings of the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.RetryPolicy">
            <summary>
                Gets the retry policy that defines the behaviour for strategies that perform
                retrying of work until it is either successful or reaches a terminating failure state.
            </summary>
            <returns>
                A <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> object initialized from the <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryerRegistry"/>
                by name of the retryer specific to the provider.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateBatchResultsForCheckIn(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0},System.Collections.Generic.ICollection{`0})">
            <summary>
                Creates a <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object representing the results of a batch check-in
                operation.
            </summary>
            <param name="items">
                The batch of work items to create the batch result for.
            </param>
            <param name="removed">
                A collection of <typeparamref name="TKey"/> objects containing the keys of work items that could not be checked in
                because they were no longer available.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object containing all items marked as succeeded.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> or argument <paramref name="removed" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ReadState(System.Data.SqlClient.SqlDataReader)">
            <summary>
                Creates a <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState" /> object from attributes read from the specified
                <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
            <param name="reader">
                The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object to read attribute values from.
            </param>
            <returns>
                The <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState" /> object initialized with the values read from
                <paramref name="reader" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="reader" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnAdd(Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Called by the base class to add a single work item to the processing pool.
            </summary>
            <param name="item">
                The work item to add.
            </param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.DuplicateWorkItemException">
                The specified work item already exists in the processing pool.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnAdd(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Called by the base class to add a batch of work items to the processing pool.
            </summary>
            <param name="items">
                The batch of work items to add.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object containing the results of the operation for the
                individual work items in specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnAddAsync(Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Called by the base class to asynchronously add a single work item to the processing pool.
            </summary>
            <param name="item">
                The work item to add.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.DuplicateWorkItemException">
                The specified work item already exists in the processing pool.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnAddAsync(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Called by the base class to asynchronously add a batch of work items to the processing pool.
            </summary>
            <param name="items">
                The batch of work items to add.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains a
                <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object containing the results of the operation for the individual
                work items in the specified batch.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckOut">
            <summary>
                Called by the base class to checks out a single work item from the processing pool.
            </summary>
            <returns>
                The work item checked out; or <b>null</b> if there are no items available in the processing pool.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckOut(System.Int16)">
            <summary>
                Called by the base class to checks out a batch of work items from the processing pool.
            </summary>
            <param name="count">
                The maximum number of work items to check out.
            </param>
            <returns>
                The <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> object containing the work items checked out from the processing
                pool.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckOutAsync">
            <summary>
                Called by the base class to asynchronously check out a single work item from the processing pool.
            </summary>
            <returns>
                A task that represents the asynchronous operation. The task result contains the work item checked out; or
                <b>null</b> if there is no work item available in the processing pool.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckOutAsync(System.Int16)">
            <summary>
                Called by the base class to asynchronously check out a batch of work items from the processing pool.
            </summary>
            <param name="count">
                The maximum number of work items to check out.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains an
                <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> objects containing the work items checked out.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckIn(Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Called by the base class to check in a single work item to the processing pool.
            </summary>
            <param name="item">
                The work item to check in.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="item" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.WorkItemNoLongerAvailableException">
                The work item was either removed or it timed out and was checked out concurrently.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckIn(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Called by the base class to check a batch of work items back into the processing pool.
            </summary>
            <param name="items">
                An <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> object containing the work items to check in.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object containing the results of the operation for the
                individual work items in the specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckInAsync(Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Called by the base class to asynchronously check in a single work item to the processing pool.
            </summary>
            <param name="item">
                The work item to check in.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="item" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnCheckInAsync(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Called by the base class to asynchronously check a batch of work items back into the processing pool.
            </summary>
            <param name="items">
                An <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> object containing the work items to check in.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains a
                <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object containing the results of the operation for the individual
                work items in the specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnGetState">
            <summary>
                Called by the base class to query the state of the processing pool.
            </summary>
            <returns>
                An <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPoolState" /> object that contains information about current state of the
                processing pool.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnGetStateAsync">
            <summary>
                Called by the base class to query the state of the processing pool.
            </summary>
            <returns>
                An <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPoolState" /> object that contains information about current state of the
                processing pool.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnClear">
            <summary>
                Removes all work items from the current processing pool.
            </summary>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.OnClearAsync">
            <summary>
                Asynchronously removes all work items from the current processing pool.
            </summary>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task" /> object that represents the operation.
            </returns>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolException">
                An unexpected error occurred. The original exception can be accessed via the
                <see cref="P:System.Exception.InnerException" /> property of the exception thrown.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForAdd(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Creates a database command for adding a single work item to the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <param name="item">
                The work item to add.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="item" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForAdd(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Creates a database command for adding a batch of work items to the processing pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <param name="items">
                The batch of work items to add.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForCheckout(System.Data.SqlClient.SqlConnection)">
            <summary>
                Creates a database command for checking out a single work item from the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForCheckout(System.Data.SqlClient.SqlConnection,System.Int16)">
            <summary>
                Creates a database command for checking out a batch of work items from the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <param name="count">
                The maximum number of work items to check out.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForCheckIn(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItem{`0})">
            <summary>
                Creates a database command for checking a single work item back into the processing pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <param name="item">
                The work item to check in.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="item" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForCheckIn(System.Data.SqlClient.SqlConnection,Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Creates a database command for checking in a batch of work items to the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <param name="items">
                The batch of work item to check in.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForGetState(System.Data.SqlClient.SqlConnection)">
            <summary>
                Creates a database command for querying the state of the processing pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandForClear(System.Data.SqlClient.SqlConnection)">
            <summary>
                Creates a database command for removing all work item from the pool.
            </summary>
            <param name="connection">
                The database connection to associate with the command.
            </param>
            <returns>
                A fully initialized <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is ready to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateBatchResultsForItemsAdded(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Creates a <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> objects with all items marked as succeeded.
            </summary>
            <param name="items">
                The batch of work items to create the results for.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object with all items marked as succeeded.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ProcessBatchOneByOne(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0},System.Action{Sitecore.Xdb.Processing.Queue.WorkItem{`0}})">
            <summary>
                This method processes a batch of work items one by one.
            </summary>
            <param name="items">
                The batch of work items to process.
            </param>
            <param name="action">
                The action to perform on each individual work item in the batch.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> of <typeparamref name="TKey"/> objects that contains
                the results of the operation for each individual work item in the batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> or argument <paramref name="action" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ProcessBatchOneByOneAsync(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0},System.Func{Sitecore.Xdb.Processing.Queue.WorkItem{`0},System.Threading.Tasks.Task})">
            <summary>
                This method processes a batch of <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItem`1" /> objects one by one.
            </summary>
            <param name="items">
                The batch of work items to process.
            </param>
            <param name="action">
                The action to perform on each individual work item in the batch.
            </param>
            <returns>
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatchResult`1" /> object that contains the results of the operation for the
                individual work items in the batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="items" /> or argument <paramref name="action" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateDatabaseConnection">
            <summary>
                Creates a new <see cref="T:System.Data.SqlClient.SqlConnection" /> object using the connection string and the credentials
                specified with the constructor.
            </summary>
            <returns>
                A <see cref="T:System.Data.SqlClient.SqlConnection" /> object initialized with the connection string and SQL credentials specified
                with the constructor. The connection needs to be opened before it can be used.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommandParametersForKey(`0)">
            <summary>
                Creates the parameters for the work item key.
            </summary>
            <param name="key">
                The work item key to create parameters for.
            </param>
            <returns>
                An array of <see cref="T:System.Data.SqlClient.SqlParameter" /> objects that contains the parameters representing the primary key.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.GetSqlMetaDataForKey">
            <summary>
                Gets an array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects describing the attributes that make up the key of a
                work item.
            </summary>
            <returns>
                An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects describing the attributes that make up the key of a work
                item.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.SetDataRecordKeyValues(Microsoft.SqlServer.Server.SqlDataRecord,`0)">
            <summary>
                Updates the specified <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> with values from the specified work item key.
            </summary>
            <param name="record">
                The <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> to update.
            </param>
            <param name="key">
                The <typeparamref name="TKey"/> providing the values to set on <paramref name="record" />.
            </param>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ReadWorkItemKey(System.Data.SqlClient.SqlDataReader)">
            <summary>
                Creates a <typeparamref name="TKey"/> object from attributes read from the specified <see cref="T:System.Data.SqlClient.SqlDataReader" />
                object.
            </summary>
            <param name="reader">
                The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object to read attribute values from.
            </param>
            <returns>
                A <typeparamref name="TKey"/> object initialized with the values read from <paramref name="reader" />.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.Collections.Generic.IReadOnlyCollection{System.Data.SqlClient.SqlParameter})">
            <summary>
                Creates a command to execute against a database.
            </summary>
            <param name="connection">A connection to the database.</param>
            <param name="routineName">A name of the stored procedure to execute.</param>
            <param name="parameters">
                A collection of the parameters required by stored procedure, specified in
                <paramref name="routineName" />.
            </param>
            <returns>A ready to use command to execute against a database.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="connection" />, <paramref name="routineName" /> or
                <paramref name="parameters" /> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ToSqlDataRecordsForAdd(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects that represents a batch of
                work items with all properties set.
            </summary>
            <param name="items">
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> object that represent the batch of work items.
            </param>
            <returns>
                A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects that can be passed to the
                database server via a structured <see cref="T:System.Data.SqlClient.SqlParameter" /> value.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ToSqlDataRecordsForRemove(Sitecore.Xdb.Processing.Queue.WorkItemBatch{`0})">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects that represents a batch of
                work items with only the key and the <see cref="P:Sitecore.Xdb.Processing.Queue.WorkItem.Attempts" /> property set.
            </summary>
            <param name="items">
                A <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItemBatch`1" /> object that represent the work item batch.
            </param>
            <returns>
                A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects that can be passed to the
                database server via a structured <see cref="T:System.Data.SqlClient.SqlParameter" /> object. The <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />
                objects contains the primary key and the <see cref="P:Sitecore.Xdb.Processing.Queue.WorkItem.Attempts" /> attribute only.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2.ReadWorkItem(System.Data.SqlClient.SqlDataReader)">
            <summary>
                Creates a <see cref="T:Sitecore.Xdb.Processing.Queue.WorkItem`1" /> object from attributes read from the specified
                <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
            <param name="reader">
                The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object to read attribute values from.
            </param>
            <returns>
                The work item initialized with the values read from <paramref name="reader" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="reader" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolDefinition">
            <summary>
            Holds information about a Sql Server implementation of the processing pool.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolDefinition.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolDefinition"/> class using runtime configuration options.
            </summary>
            <param name="options">
              The IConfiguration implementation with runtime settings.
            </param>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory">
            <summary>
            Represents the processing pool factory that can both synchronously and asynchronously create, provide access to, and remove dynamically created processing pools.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.#ctor(Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings,Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry)">
            <summary>
            Creates instance of <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory"/>
            </summary>
            <param name="settings">Various settings required to establish connection with MS SQL Server database.</param>
            <param name="resolver">An <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.IConnectionStringResolver"/> object that is used to resolve connections string names.</param>
            <param name="performanceCounters">
              The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object to use to update performance counters; or <b>null</b> to disable
              the collection of performance metrics.
            </param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <exception cref="T:System.ArgumentNullException">Argument <paramref name="settings"/>, or <paramref name="resolver"/>, or <paramref name="retryerRegistry"/> is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The connection string specified in <paramref name="settings"/> could not be resolved.</exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.Settings">
            <summary>
            Gets settings required to establish connection with MS SQL Server database.
            </summary>
            <value>
              A <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings"/> value that contains settings
              required to establish connection with MS SQL Server database.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineAddDefinition">
            <summary>
              Gets the name of the stored procedure for adding a processing pool definition.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for adding a processing pool definition.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineGetDefinition">
            <summary>
              Gets the name of the stored procedure for getting a processing pool definition.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for getting a processing pool definition.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineRemoveDefinition">
            <summary>
              Gets the name of the stored procedure for removing a processing pool definition and all related work items.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure for removing a
            processing pool definition and all related work items.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.PerformanceCounters">
            <summary>
              Gets an <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object that can be used to work with performance metrics.
            </summary>
            <value>
              A <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> object that can be used to work with performance metrics.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RetryerRegistry">
            <summary>
             The retryer registry that is responsible for managing the creation and access to
             a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </summary>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RetryPolicy">
            <summary>
                Gets the retry policy that defines the behaviour for strategies that perform
                retrying of work until it is either successful or reaches a terminating failure state.
            </summary>
            <returns>
                A <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> object initialized from the <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryerRegistry"/>
                by name of the retryer specific to the provider.
            </returns>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.SchemaName">
            <summary>
              Gets the name of the database schema to use when formatting database object names.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the database schema to use when formatting
              database object names.
            </value>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPool(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)">
            <summary>
            Creates an empty processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPool(System.Guid)"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <returns>The <see cref="T:System.Guid"/> value representing the pool id.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="poolDefinition"/> is null.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during creation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPool(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition,System.Guid)">
            <summary>
            Creates an empty processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPool(System.Guid)"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <param name="poolId">The id, used to create the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.</param>
            <returns>The <see cref="T:System.Guid"/> value representing the pool id.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="poolDefinition"/> is null.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during creation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolAsync(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)">
            <summary>
            Asynchronously creates an empty processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPool(System.Guid)"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that contains <see cref="T:System.Guid"/> value representing the pool id.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="poolDefinition"/> is null.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during creation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolAsync(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition,System.Guid)">
            <summary>
            Asynchronously creates an empty processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPoolAsync(System.Guid)"/> with id, defined in <paramref name="poolId"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <param name="poolId">The id, used to create the <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that contains <see cref="T:System.Guid"/> value representing the pool id.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="poolDefinition"/> is null.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during creation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPool(System.Guid)">
            <summary>
            Returns a ready-to-use processing pool instance that has been created in the system using the <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPool(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)"/>.
            </summary>
            <param name="id">The id of the pool to return.</param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDoesNotExistException">The <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/> is not found.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during retrieval of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
            <returns>Returns a ready-to-use processing pool instance.</returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPoolAsync(System.Guid)">
            <summary>
            Asynchronously returns a ready-to-use processing pool instance that has been created in the system using the <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolAsync(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)"/>.
            </summary>
            <param name="id">The id of the pool to return.</param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolDoesNotExistException">The <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/> is not found.</exception>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during retrieval of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the ready-to-use <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/> instance.</returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RemoveProcessingPool(System.Guid)">
            <summary>
            Removes the processing pool instance that has been created in the system using the <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPool(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)"/>.
            </summary>
            <param name="id">The id of the pool to remove.</param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during removal of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
            <remarks> During removal of the processing pool, all items registered for the pool are removed as well.
            Therefore, the operation can take significant amount of time to finish.</remarks>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RemoveProcessingPoolAsync(System.Guid)">
            <summary>
            Asynchronously removes the processing pool instance that has been created in the system using the <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolAsync(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)"/>.
            </summary>
            <param name="id">The id of the pool to remove.</param>
            <exception cref="T:Sitecore.Xdb.Processing.Queue.ProcessingPoolFactoryException">Thrown in case of an unexpected error during removal of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/></exception>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <remarks> During removal of the processing pool, all items registered for the pool are removed as well.
            Therefore, the operation can take significant amount of time to finish.</remarks>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateDatabaseConnection">
            <summary>
              Creates a new <see cref="T:System.Data.Common.DbConnection"/> object using the connection string specified
              in the <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.Settings"/>.
            </summary>
            <returns>
              A <see cref="T:System.Data.Common.DbConnection"/> object initialized with the connection string and SQL credentials specified
              with the constructor. The connection needs to be opened before it can be used.
            </returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateAddDefinitionParameters(System.Guid,Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineAddDefinition"/> stored procedure.
            </summary>
            <param name="poolId">The id, used to create the Processing pool.</param>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <returns>The <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineAddDefinition"/> stored procedure.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="poolDefinition"/> is null.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateRemoveDefinitionParameters(System.Guid)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineRemoveDefinition"/> stored procedure.
            </summary>
            <param name="poolId">The id of the pool to include as a <see cref="T:System.Data.Common.DbParameter"/> value.</param>
            <returns>The <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineRemoveDefinition"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateGetDefinitionParameters(System.Guid)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineGetDefinition"/> stored procedure.
            </summary>
            <param name="poolId">The id of the pool to include as a <see cref="T:System.Data.Common.DbParameter"/> value.</param>
            <returns>The <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:System.Data.Common.DbParameter"/> passed for execution to <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.RoutineGetDefinition"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.InstantiateProcessingPool(System.Guid,Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)">
            <summary>
            Creates specific implementation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.
            </summary>
            <param name="poolId">The id of the processing pool to instantiate.</param>
            <param name="definition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <returns>Instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="definition"/> parameter is null.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.InstantiateAsyncProcessingPool(System.Guid,Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition)">
            <summary>
            Creates specific implementation of the <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>.
            </summary>
            <param name="poolId">The id of the processing pool to instantiate.</param>
            <param name="definition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <returns>Instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="definition"/> parameter is null.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateCommand(System.Data.Common.DbConnection,System.String,System.Collections.Generic.ICollection{System.Data.Common.DbParameter})">
            <summary>
            Creates a command to execute against a database.
            </summary>
            <param name="connection">A connection to the database.</param>
            <param name="routineName">A name of the stored procedure to execute.</param>
            <param name="parameters">A collection of the parameters required by stored procedure, specified in <paramref name="routineName"/>.</param>
            <returns>A ready to use command to execute against a database.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="connection"/>, <paramref name="routineName"/> or <paramref name="parameters"/> is null.</exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.ReadPoolDefinition(System.Data.Common.DbDataReader)">
            <summary>
              Creates a <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> object using data read from the specified
              <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.Common.DbDataReader"/> object to read data from.
            </param>
            <returns>
              The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolCore(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition,System.Guid)">
            <summary>
            Creates a processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPool(System.Guid)"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <param name="poolId">The id, used to create the <see cref="T:Sitecore.Xdb.Processing.Queue.IProcessingPool`1"/>.</param>
            <returns>The <see cref="T:System.Guid"/> value representing the pool id.</returns>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.CreateProcessingPoolCoreAsync(Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition,System.Guid)">
            <summary>
            Asynchronously creates a processing pool which can be retrieved using <see cref="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory.GetProcessingPoolAsync(System.Guid)"/>.
            </summary>
            <param name="poolDefinition">The <see cref="T:Sitecore.Xdb.Processing.Queue.GenericProcessingPoolDefinition"/> instance which contains various information about the pool.</param>
            <param name="poolId">The id, used to create the <see cref="T:Sitecore.Xdb.Processing.Queue.IAsyncProcessingPool`1"/>.</param>
            <returns>The <see cref="T:System.Guid"/> value representing the pool id.</returns>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings">
            <summary>
             Represents various settings required by <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactory"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings.#ctor(System.String,System.Int32,System.Int16,System.String)">
            <summary>
              Creates instance of <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings"/>
            </summary>
            <param name="connectionStringName">Name of the connection string used to establish connection 
              with database.</param>
            <param name="commandTimeout">The wait time before the execution attempt of a database command is 
              terminated and an error is generated.</param>
            <param name="queueHead">Gets the size, in terms of batches, of the head to the processing queue.</param>
            <param name="retryerName">
                The name of a <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> that is registered for the sql provider.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionStringName"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="commandTimeout"/> or <paramref name="queueHead"/> is less than 1.</exception>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="retryerName" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
                Argument <paramref name="retryerName" /> is empty or white space.
            </exception>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings.ConnectionStringName">
            <summary>
              Gets the name of the connection string used to establish connection with database.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the connection string used to
              establish connection with database server.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings.CommandTimeout">
            <summary>
              Gets the wait time before the execution attempt of a database command is terminated and an error is
              generated.
            </summary>
            <value>
              The wait time, specified in seconds, before the execution attempt of a database command is terminated
              and an error is generated.
            </value>
            <remarks>
              This values is passed strait to the database command objects.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings.QueueHead">
            <summary>
              Gets the size, in terms of batches, of the head to the processing queue.
            </summary>
            <value>
              A <see cref="T:System.Int16"/> value that is the size, in terms of batches, of the head to the processing queue.
              This value is always equal to or greater than one.
            </value>
            <remarks>
              When a processing item is checked out, this value controls the number of items or the number of batches
              that are considered as potential candidates. An random item or batch is picked from this set to minimize
              contention. The higher this value is, the more IO is required to select the candidate items, which can
              hurt performance. The lower the value, the higher the chance for two or more processors to compete for
              the same item, which can again hurt performance.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolFactorySettings.RetryerName">
            <summary>
            The name of a <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> that is registered for the sql provider.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings">
            <summary>
              Holds various configuration settings for <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPool`2"/> implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.#ctor(System.String,System.Int16,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> class with a command time-out
              value of 30.
            </summary>
            <param name="connectionStringName">
              The name of the connection string to use to connect to the Microsoft SQL Server database hosting the processing pool.
            </param>
            <param name="queueHead">
              The size, in terms of batches, of the head to the processing queue. See <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.QueueHead"/> for
              details.
            </param>
            <param name="retryerName">
                The name of a <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> that is registered for the sql provider.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              Argument <paramref name="queueHead"/> is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="retryerName" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
                Argument <paramref name="retryerName" /> is empty or white space.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.#ctor(System.String,System.Int16,System.Int32,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> class.
            </summary>
            <param name="connectionStringName">
              The name of the connection string to use to connect to the Microsoft SQL Server database hosting the processing pool.
            </param>
            <param name="queueHead">
              The size, in terms of batches, of the head to the processing queue. See <see cref="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.QueueHead"/> for
              details.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempts of a database command is terminated and an error is
              generated.
            </param>
            <param name="retryerName">
                The name of a <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> that is registered for the sql provider.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              Argument <paramref name="queueHead"/> is less than or equal to zero or 
              argument <paramref name="commandTimeout"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="retryerName" /> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException">
                Argument <paramref name="retryerName" /> is empty or white space.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings"/> class using runtime configuration options.
            </summary>
            <param name="options">
              The IConfiguration implementation with runtime settings.
            </param>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.ConnectionStringName">
            <summary>
              Gets the name of the connection string to use to connect to the database server hosting the processing
              pool.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the connection string to use to connect to the
              database server hosting the processing pool.
            </value>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.CommandTimeout">
            <summary>
              Gets the wait time before the execution attempts of a database command is terminated and an error is
              generated.
            </summary>
            <value>
              The wait time, specified in seconds, before the execution attempts of a database command is terminated
              and an error is generated.
            </value>
            <remarks>
              This values is passed strait to the database command objects created by the processing pool.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.QueueHead">
            <summary>
              Gets the size, in terms of batches, of the head to the processing queue.
            </summary>
            <value>
              A <see cref="T:System.Int16"/> value that is the size, in terms of batches, of the head to the processing queue.
              This value is always equal to or greater than one.
            </value>
            <remarks>
              When a processing item is checked out, this value controls the number of items or the number of batches
              that are considered as potential candidates. An random item or batch is picked from this set to minimize
              contention. The higher this value is, the more IO is required to select the candidate items, which can
              hurt performance. The lower the value, the higher the chance for two or more processors to compete for
              the same item, which can again hurt performance.
            </remarks>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolSettings.RetryerName">
            <summary>
            The name of a <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> that is registered for the sql provider.
            </summary>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState">
            <summary>
              Defines the constants for relevant Microsoft SQL Server error codes.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState.#ctor(System.Int64)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState"/> class.
            </summary>
            <param name="totalNumberOfItems">
              The total number of work items contained within the processing pool.
            </param>
        </member>
        <member name="P:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerProcessingPoolState.TotalNumberOfItems">
            <summary>
              Gets the total number of work items contained within the processing pool.
            </summary>
            <value>
              A <see cref="T:System.Int64"/> value that indicates the total number of work items contained in the processing
              pool.
            </value>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerQueryUtilities">
            <summary>
            Provides utility methods related to MS SQL Server used internally by the current component.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerQueryUtilities.FormatObjectName(System.String,System.String)">
            <summary>
              Formats the name of the specified database object by adding the schema name and delimiters to it.
            </summary>
            <param name="schemaName">
              The name of the database schema containing the object.
            </param>
            <param name="objectName">
              The name of the database object.
            </param>
            <returns>
              The formatted name of the database objects.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="schemaName"/> or argument <paramref name="objectName"/> is a <b>null</b>
              reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.SqlServerQueryUtilities.FormatParameterName(System.String)">
            <summary>
              Formats the name of the specified command parameter.
            </summary>
            <param name="name">
              The name of the field or parameter.
            </param>
            <returns>
              The formatted parameter name.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Xdb.Processing.Queue.SqlServer.Utilities">
            <summary>
              Provides utility methods used internally by the current component.
            </summary>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.Utilities.SerializeProperties(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
              Serializes the specified dictionary to a <see cref="T:System.String"/> object.
            </summary>
            <param name="properties">
              The dictionary of properties to serialize.
            </param>
            <returns>
              A <see cref="T:System.String"/> value that is the serialized representation of the specified dictionary.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="properties"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Xdb.Processing.Queue.SqlServer.Utilities.DeserializeProperties(System.String)">
            <summary>
              Deserializes a dictionary of properties from a <see cref="T:System.String"/> object.
            </summary>
            <param name="text">
              The serialized dictionary of properties.
            </param>
            <returns>
              A <see cref="T:System.Collections.Generic.IDictionary`2"/> of <see cref="T:System.String"/> keys and <see cref="T:System.String"/> values
              that is the deserialized dictionary of properties.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="text"/> is a <b>null</b> reference.
            </exception>
        </member>
    </members>
</doc>
