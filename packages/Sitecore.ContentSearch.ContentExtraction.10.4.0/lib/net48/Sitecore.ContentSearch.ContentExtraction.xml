<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.ContentSearch.ContentExtraction</name>
    </assembly>
    <members>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Common.DefaultMediaItemTextExtractor">
            <summary>
            Represents a media content extractor which is used by default.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Common.DefaultMediaItemTextExtractor.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>The compute field value.</summary>
            <param name="indexable">The indexable.</param>
            <returns>The <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Common.MediaReference">
            <summary>
            Represents a reference to a temporary media which requires disposal after usage. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.ContentExtractionSettings">
            <summary>
            Represents Content Extraction configuration settings.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.ContentExtractionSettings.#ctor(Sitecore.Abstractions.BaseSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.ContentExtractionSettings" /> struct.
            </summary>
            <param name="settings">The <see cref="T:Sitecore.Abstractions.BaseSettings" /> instance.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.ContentExtractionSettings.MediaIndexingFolder">
            <summary>
            Defines the folder to create temporary files for media indexing.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.ContentExtractionSettings.MaxMediaSize">
            <summary>
            Defines the maximum allowed size of media intended to be indexed. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.SettingsExtensions">
            <summary>
            Extension methods for the <see cref="T:Sitecore.Abstractions.BaseSettings"/> instance to quickly access the known Content Search settings.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Configuration.KnownSettings.SettingsExtensions.ContentExtraction(Sitecore.Abstractions.BaseSettings)">
            <summary>
            The Content Extraction settings. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.DefaultMediaFileTextExtractor">
            <summary>
            Extracts text from media
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DefaultMediaFileTextExtractor.ExtractText(System.String)">
            <inheritdoc />
            <summary>
            Reads all the text from the given media file.
            </summary>
            <param name="mediaFilePath">Path to media file.</param>
            <returns>Extracted text.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DefaultMediaFileTextExtractor.FileNotExists(System.String)">
            <summary>
            Checks whether file not exists on the file system.
            </summary>
            <param name="mediaFilePath">The path to media file.</param>
            <returns><c>true</c> in case file not exists, otherwise <c>false</c></returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.DefaultMediaTextExtractor">
            <summary>
            Extracts text from media
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DefaultMediaTextExtractor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.DefaultMediaTextExtractor"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DefaultMediaTextExtractor.#ctor(Sitecore.ContentSearch.ContentExtraction.IReaderFactory)">
            <summary>
            Extracts text from media
            </summary>
            <param name="readerFactory">Provides the <see cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader"/>s</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DefaultMediaTextExtractor.ExtractText(System.String)">
            <inheritdoc />
            <summary>
            Reads all the text from the given media file.
            </summary>
            <param name="mediaFilePath">Path to media file.</param>
            <returns>Extracted text.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.DependencyInjection.ContentExtractionConfigurator">
            <summary>
            Responsible for populating <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance with content extraction related services.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.DependencyInjection.ContentExtractionConfigurator.Configure(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Diagnostics.Debug">
            <summary>
            Debug class
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Diagnostics.Debug.ThrowInvalidOperation(System.String)">
            <summary>
            Throws an <exception cref="T:System.InvalidOperationException"/> condition.
            </summary>
            <param name="errorMessage">The error message.</param>
            <remarks>Requires the preprocessor constant DEBUG</remarks>
            <exception cref="T:System.Exception"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper">
            <summary>
            Utility class to get a class factory for a certain class ID by loading the DLL that implements that class.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.dllList">
            <summary>
            The DLL list.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllGetClassObject">
            <summary>
            Signature for <c>DllGetClassObject</c> function.
            </summary>
            <param name="classId">The class id.</param>
            <param name="interfaceId">The interface id.</param>
            <param name="interfacePointer">The interface pointer.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.GetClassFactory(System.String,System.String)">
            <summary>
            Gets a class factory for a specific COM Class ID.
            </summary>
            <param name="dllName">The DLL where the COM class is implemented.</param>
            <param name="filterPersistClass">The requested class ID.</param>
            <returns>IClassFactory instance used to create instances of that class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.GetClassFactoryFromDll(System.String,System.String)">
            <summary>
            Gets the class factory from DLL.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The class factory from DLL.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllList">
            <summary>
            Holds a list of DLL handles and unloads the DLLs in the destructor.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllList.dllCollection">
            <summary>
            The DLL list.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllList.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllList"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.ComHelper.DllList.AddDllHandle(System.IntPtr)">
            <summary>
            Adds the DLL handle.
            </summary>
            <param name="dllHandle">The DLL handle.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable">
            <summary>
            The class representing disposable filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable.resource">
            <summary>
            The disposable resource.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable.#ctor(Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter,System.IDisposable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="relatedResource">The related resource.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterDisposable.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException">
            <summary>
            Represents an exceptional condition related to <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter"/> types.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader">
            <summary>
            FilterLoader finds the DLL and ClassID of the COM object responsible  
            for filtering a specific file extension. 
            It then loads that DLL, creates the appropriate COM object and returns 
            a pointer to an IFilter instance
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.cache">
            <summary>
            The cache.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.job">
            <summary>
            The job.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.LoadAndInitIFilter(System.String)">
            <summary>
            Loads the and initializes filter.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.LoadAndInitIFilter(System.String,System.IO.Stream)">
            <summary>
            Loads the and initializes filter.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="stream">Content stream.</param>
            <returns>The filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.ReadStringFromHklm(System.String)">
            <summary>
            Reads the string from HKLM.
            </summary>
            <param name="key">The key.</param>
            <returns>The string from HKLM.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.ReadStringFromHklm(System.String,System.String)">
            <summary>
            Reads the string from HKLM.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The string from HKLM.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.LoadIFilter(System.String)">
            <summary>
            Finds an IFilter implementation for a file type.
            </summary>
            <param name="ext">The extension of the file.</param>
            <returns>An IFilter instance used to retrieve text from that file type.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.LoadFilterFromDll(System.String,System.String)">
            <summary>
            Loads the filter from DLL.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The loaded filter.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetFilterDllAndClass(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.AddExtensionToCache(System.String,System.String,System.String)">
            <summary>
            Adds the extension to cache.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetFilterDllAndClassFromPersistentHandler(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class from persistent handler.
            </summary>
            <param name="persistentHandlerClass">The persistent handler class.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetPersistentHandlerClass(System.String,System.Boolean)">
            <summary>
            Gets the persistent handler class.
            </summary>
            <param name="extension">The extension.</param>
            <param name="searchContentType">if set to <c>true</c> code tries to get info from the content type.</param>
            <returns>The persistent handler class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetPersistentHandlerClassFromContentType(System.String)">
            <summary>
            Gets the persistent handler class from content type.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetPersistentHandlerClassFromDocumentType(System.String)">
            <summary>
            Gets the persistent handler class from document type.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetPersistentHandlerClassFromExtension(System.String)">
            <summary>
            Gets the persistent handler class from extension.
            </summary>
            <param name="extension">The extension.</param>
            <returns>The persistent handler class</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.GetFilterDllAndClassFromCache(System.String,System.String@,System.String@)">
            <summary>
            Gets the filter DLL and class from cache.
            </summary>
            <param name="extension">The extension.</param>
            <param name="dllName">Name of the DLL.</param>
            <param name="filterPersistClass">The filter persist class.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.CacheEntry">
            <summary>
            The cache entry.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.CacheEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.CacheEntry"/> class.
            </summary>
            <param name="dllName">Name of the DLL.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.CacheEntry.DllName">
            <summary>
            Gets or sets the DLL name.
            </summary>
            <value>
            The name of the DLL.
            </value>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterLoader.CacheEntry.ClassName">
            <summary>
            Gets or sets the class name.
            </summary>
            <value>
            The name of the class.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader">
            <summary>
            Implements a TextReader that reads from an IFilter. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.done">
            <summary>
            Boolean value indicating whether this reader has finished reading.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.currentChunk">
            <summary>
            The current chunk.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.currentChunkValid">
            <summary>
            Boolean value indicating whether current chunk is valid.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.charsLeftFromLastRead">
            <summary>
            The chars left from last read.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <exception cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterException">Thrown when there is no filter defined for filename.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.Close">
            <summary>
            Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the TextReader.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified array.
            </summary>
            <param name="array">The array.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>The number of chars read.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.FilterReader.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IClassFactory">
            <summary>
            The interface representing COM IClassFactory interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IClassFactory.CreateInstance(System.Object,System.Guid@,System.Object@)">
            <summary>
            Creates the instance.
            </summary>
            <param name="unknownOuter">The unknown outer.</param>
            <param name="interfaceId">The interface id.</param>
            <param name="interfacePointer">The interface pointer.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IClassFactory.LockServer(System.Boolean)">
            <summary>
            Locks an object application open in memory. This enables instances to be created more quickly.
            </summary>
            <param name="lockServer">If set to <c>true</c>, increments the lock count; if <c>false</c>, decrements the lock count.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter.Init(Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT,System.Int32,System.IntPtr,Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_FLAGS@)">
            <summary>
            The IFilter::Init method initializes a filtering session.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter.GetChunk(Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK@)">
            <summary>
            The IFilter::GetChunk method positions the filter at the beginning
            of the next chunk, 
            or at the first chunk if this is the first call to the GetChunk
            method, and returns a description of the current chunk. 
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter.GetText(System.UInt32@,System.Char[])">
            <summary>
            The IFilter::GetText method retrieves text (text-type properties)
            from the current chunk, 
            which must have a CHUNKSTATE enumeration value of CHUNK_TEXT.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter.GetValue(System.IntPtr@)">
            <summary>
            The IFilter::GetValue method retrieves a value (public
            value-type property) from a chunk, 
            which must have a CHUNKSTATE enumeration value of CHUNK_VALUE.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilter.BindRegion(Sitecore.ContentSearch.ContentExtraction.IFilter.FILTERREGION@,System.Guid@,System.Object@)">
            <summary>
            The IFilter::BindRegion method retrieves an interface representing
            the specified portion of the object. 
            Currently reserved for future use.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterDisposable">
            <summary>
            The interface representing disposable filter.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterDisposable.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>
            The filter.
            </value>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterMediaFileTextExtractor">
            <inheritdoc />
            <remarks>Uses the <a href="http://msdn.microsoft.com/en-us/library/ms691105(v=vs.85).aspx">IFilter</a> interface to extract text from documents.</remarks>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterMediaFileTextExtractor.ExtractText(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersist">
            <summary>
            The interface representing COM IPersist interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersist.GetClassID(System.Guid@)">
            <summary>
            Gets the class ID.
            </summary>
            <param name="classId">The class ID.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream">
            <summary>
            The interface representing COM IPersistStream interface.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream.GetClassID(System.Guid@)">
            <summary>
            Gets the class ID.
            </summary>
            <param name="classId">The class ID.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream.IsDirty">
            <summary>
            Determines whether this instance is dirty.
            </summary>
            <returns>Value indicating whether this instance is dirty.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream.Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary>
            Saves into the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="clearDirty">Indicates whether to clear the dirty flag after the save is complete.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.IPersistStream.GetSizeMax(System.Int64@)">
            <summary>
            Gets the size max.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.Job">
            <summary>
            Defines the Job type.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.handle">
            <summary>
            The job object handle.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.disposed">
            <summary>
            Boolean value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.Job" /> class.
            </summary>
            <exception cref="T:System.Exception">Exception is thrown if code cannot set job information.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.Job"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.AddProcess(System.IntPtr)">
            <summary>
            Adds the process.
            </summary>
            <param name="processHandle">The process handle.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.Job.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter">
            <summary>
            Defines the StreamAdapter type. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.stream">
            <summary>
            The managed stream.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter"/> class.
            </summary>
            <param name="stream">The managed stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.
            </summary>
            <param name="pv">When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</param>
            <param name="cb">The number of bytes to read from the stream object.</param>
            <param name="pcbRead">A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a specified number of bytes into the stream object starting at the current seek pointer.
            </summary>
            <param name="pv">The buffer to write this stream to.</param>
            <param name="cb">The number of bytes to write to the stream.</param>
            <param name="pcbWritten">On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to <see cref="F:System.IntPtr.Zero" />, this method does not provide the actual number of bytes written.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.
            </summary>
            <param name="dlibMove">The displacement to add to <paramref name="origin" />.</param>
            <param name="origin">The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file.</param>
            <param name="plibNewPosition">On successful return, contains the offset of the seek pointer from the beginning of the stream.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Retrieves the <see cref="T:System.Runtime.InteropServices.ComTypes.STATSTG" /> structure for this stream.
            </summary>
            <param name="pstatstg">When this method returns, contains a STATSTG structure that describes this stream object. This parameter is passed uninitialized.</param>
            <param name="grfStatFlag">Members in the STATSTG structure that this method does not return, thus saving some memory allocation operations.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Creates a new stream object with its own seek pointer that references the same bytes as the original stream.
            </summary>
            <param name="ppstm">When this method returns, contains the new stream object. This parameter is passed uninitialized.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Commit(System.Int32)">
            <summary>
            Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.
            </summary>
            <param name="grfCommitFlags">A value that controls how the changes for the stream object are committed.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.
            </summary>
            <param name="pstm">A reference to the destination stream.</param>
            <param name="cb">The number of bytes to copy from the source stream.</param>
            <param name="pcbRead">On successful return, contains the actual number of bytes read from the source.</param>
            <param name="pcbWritten">On successful return, contains the actual number of bytes written to the destination.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Restricts access to a specified range of bytes in the stream.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.</param>
            <param name="cb">The length of the range, in bytes, to restrict.</param>
            <param name="lockType">The requested restrictions on accessing the range.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.Revert">
            <summary>
            Discards all changes that have been made to a transacted stream since the last <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)" /> call.
            </summary>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.SetSize(System.Int64)">
            <summary>
            Changes the size of the stream object.
            </summary>
            <param name="libNewSize">The new size of the stream as a number of bytes.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IFilter.StreamAdapter.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            Removes the access restriction on a range of bytes previously restricted with the <see cref="M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)" /> method.
            </summary>
            <param name="libOffset">The byte offset for the beginning of the range.</param>
            <param name="cb">The length, in bytes, of the range to restrict.</param>
            <param name="lockType">The access restrictions previously placed on the range.</param>
            <exception cref="T:System.NotImplementedException">Method is not implemented.</exception>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.Win32NativeMethods">
            <summary>
            This class contains native methods.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.idChunk">
            <summary>
            The chunk identifier. Chunk identifiers must be unique for the
            current instance of the IFilter interface. 
            Chunk identifiers must be in ascending order. The order in which
            chunks are numbered should correspond to the order in which they appear
            in the source document. Some search engines can take advantage of the
            proximity of chunks of various properties. If so, the order in which
            chunks with different properties are emitted will be important to the
            search engine. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.breakType">
            <summary>
            The type of break that separates the previous chunk from the current
             chunk. Values are from the CHUNK_BREAKTYPE enumeration. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.flags">
            <summary>
            Flags indicate whether this chunk contains a text-type or a
            value-type property. 
            Flag values are taken from the CHUNKSTATE enumeration. If the CHUNK_TEXT flag is set, 
            IFilter::GetText should be used to retrieve the contents of the chunk
            as a series of words. 
            If the CHUNK_VALUE flag is set, IFilter::GetValue should be used to retrieve 
            the value and treat it as a single property value. If the filter dictates that the same 
            content be treated as both text and as a value, the chunk should be emitted twice in two       
            different chunks, each with one flag set. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.locale">
            <summary>
            The language and sublanguage associated with a chunk of text. Chunk locale is used 
            by document indexers to perform proper word breaking of text. If the chunk is 
            neither text-type nor a value-type with data type VT_LPWSTR, VT_LPSTR or VT_BSTR, 
            this field is ignored. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.attribute">
            <summary>
            The property to be applied to the chunk. If a filter requires that the same text 
            have more than one property, it needs to emit the text once for each property 
            in separate chunks. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.idChunkSource">
            <summary>
            The ID of the source of a chunk. The value of the idChunkSource
            member depends on the nature of the chunk: 
            If the chunk is a text-type property, the value of the idChunkSource
            member must be the same as the value of the idChunk member.
            If the chunk is an public value-type property derived from textual
            content, the value of the idChunkSource member is the chunk ID for the
            text-type chunk from which it is derived. 
            If the filter attributes specify to return only public value-type
            properties, there is no content chunk from which to derive the current
            public value-type property. In this case, the value of the
            idChunkSource member must be set to zero, which is an invalid chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.cwcStartSource">
            <summary>
            The offset from which the source text for a derived chunk starts in
            the source chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.STAT_CHUNK.cwcLenSource">
            <summary>
            The length in characters of the source text from which the current
            chunk was derived. 
            A zero value signifies character-by-character correspondence between
            the source text and 
            the derived text. A nonzero value means that no such direct
            correspondence exists
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_FLAGS.OLE_PROPERTIES">
            <summary>
            The caller should use the IPropertySetStorage and IPropertyStorage
            interfaces to locate additional properties. 
            When this flag is set, properties available through COM
            enumerators should not be returned from IFilter. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT">
            <summary>
            Flags controlling the operation of the FileFilter
            instance.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.CANON_PARAGRAPHS">
            <summary>
            Paragraph breaks should be marked with the Unicode PARAGRAPH
            SEPARATOR (0x2029)
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.HARD_LINE_BREAKS">
            <summary>
            Soft returns, such as the newline character in Microsoft Word, should
            be replaced by hard returnsLINE SEPARATOR (0x2028). Existing hard
            returns can be doubled. A carriage return (0x000D), line feed (0x000A),
            or the carriage return and line feed in combination should be considered
            a hard return. The intent is to enable pattern-expression matches that
            match against observed line breaks. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.CANON_HYPHENS">
            <summary>
            Various word-processing programs have forms of hyphens that are not
            represented in the host character set, such as optional hyphens
            (appearing only at the end of a line) and nonbreaking hyphens. This flag
            indicates that optional hyphens are to be converted to nulls, and
            non-breaking hyphens are to be converted to normal hyphens (0x2010), or
            HYPHEN-MINUSES (0x002D). 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.CANON_SPACES">
            <summary>
            Just as the CANON_HYPHENS flag standardizes hyphens,
            this one standardizes spaces. All special space characters, such as
            nonbreaking spaces, are converted to the standard space character
            (0x0020). 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.APPLY_INDEX_ATTRIBUTES">
            <summary>
            Indicates that the client wants text split into chunks representing
            public value-type properties. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.APPLY_CRAWL_ATTRIBUTES">
            <summary>
            Indicates that the client wants text split into chunks representing
            properties determined during the indexing process. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.APPLY_OTHER_ATTRIBUTES">
            <summary>
            Any properties not covered by the APPLY_INDEX_ATTRIBUTES
            and APPLY_CRAWL_ATTRIBUTES flags should be emitted. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.INDEXING_ONLY">
            <summary>
            Optimizes IFilter for indexing because the client calls the
            IFilter::Init method only once and does not call IFilter::BindRegion.
            This eliminates the possibility of accessing a chunk both before and
            after accessing another chunk. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.SEARCH_LINKS">
            <summary>
            The text extraction process must recursively search all linked
            objects within the document. If a link is unavailable, the
            IFilter::GetChunk call that would have obtained the first chunk of the
            link should return FILTER_E_LINK_UNAVAILABLE. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFILTER_INIT.FILTER_OWNED_VALUE_OK">
            <summary>
            The content indexing process can return property values set by the  filter. 
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE">
            <summary>
            Enumerates the different breaking types that occur between 
            chunks of text read out by the FileFilter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE.CHUNK_NO_BREAK">
            <summary>
            No break is placed between the current chunk and the previous chunk.
            The chunks are glued together. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE.CHUNK_EOW">
            <summary>
            A word break is placed between this chunk and the previous chunk that
            had the same attribute. 
            Use of CHUNK_EOW should be minimized because the choice of word
            breaks is language-dependent, 
            so determining word breaks is best left to the search engine. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE.CHUNK_EOS">
            <summary>
            A sentence break is placed between this chunk and the previous chunk
            that had the same attribute. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE.CHUNK_EOP">
            <summary>
            A paragraph break is placed between this chunk and the previous chunk
            that had the same attribute.
            </summary>     
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNK_BREAKTYPE.CHUNK_EOC">
            <summary>
            A chapter break is placed between this chunk and the previous chunk
            that had the same attribute. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNKSTATE.CHUNK_TEXT">
            <summary>
            The current chunk is a text-type property.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNKSTATE.CHUNK_VALUE">
            <summary>
            The current chunk is a value-type property. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.CHUNKSTATE.CHUNK_FILTER_OWNED_VALUE">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.S_OK">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_ACCESSDENIED">
            <summary>
            The function was denied access to the filter file. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_HANDLE">
            <summary>
            The function encountered an invalid handle,
            probably due to a low-memory situation. 
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_INVALIDARG">
            <summary>
            The function received an invalid parameter.
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_OUTOFMEMORY">
            <summary>
            Out of memory
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_NOTIMPL">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.E_FAIL">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_PASSWORD">
            <summary>
            File not filtered due to password protection
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_UNKNOWNFORMAT">
            <summary>
            The document format is not recognised by the filter
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_NO_TEXT">
            <summary>
            No text in current chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_END_OF_CHUNKS">
            <summary>
            No more chunks of text available in object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_NO_MORE_TEXT">
            <summary>
            No more text available in chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_NO_MORE_VALUES">
            <summary>
            No more property values available in chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_ACCESS">
            <summary>
            Unable to access object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_W_MONIKER_CLIPPED">
            <summary>
            Moniker doesn't cover entire region
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_EMBEDDING_UNAVAILABLE">
            <summary>
            Unable to bind IFilter for embedded object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_E_LINK_UNAVAILABLE">
            <summary>
            Unable to bind IFilter for linked object
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_S_LAST_TEXT">
            <summary>
             This is the last text in the current chunk
            </summary>
        </member>
        <member name="F:Sitecore.ContentSearch.ContentExtraction.IFilter.IFilterReturnCode.FILTER_S_LAST_VALUES">
            <summary>
            This is the last value in the current chunk
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader">
            <summary>
            Represents a media file reader object.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader.ReadAll(System.String)">
            <summary>
            Reads all the text under the given media file.
            </summary>
            <param name="filePath">Path to media file.</param>
            <returns>All text contained in the file.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IMediaFileTextExtractor">
            <summary>
            Represents the media file text extractor.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IMediaFileTextExtractor.ExtractText(System.String)">
            <summary>
            Extract the text from the given media file.
            </summary>
            <param name="mediaFilePath">Path to media file.</param>
            <returns>Extracted text.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.IReaderFactory">
            <summary>
            Represent the factory class for <see cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader"/>. Implement this interface if you want to build your custom extraction logic.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.IReaderFactory.CreateReader(System.String)">
            <summary>
            Creates a concrete <see cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader"/> instance.
            </summary>
            <param name="mediaFileExtension">Media file extension</param>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory">
            <inheritdoc />
            <summary>
            Default reader factory.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory.#ctor(Sitecore.Abstractions.BaseLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory"/> class.
            </summary>
            <param name="logger">The logger object.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory.CreateReader(System.String)">
            <inheritdoc />
            <summary>
            Creates a concrete <see cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader" /> instance.
            </summary>
            <param name="mediaFileExtension">Media file extension</param>
            <returns>The <see cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader" />.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlDocReader">
            <inheritdoc cref="T:Sitecore.ContentSearch.ContentExtraction.ILowLevelReader"/>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlDocReader.ReadAll(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlExcelReader">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlExcelReader.ReadAll(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlPresentationReader">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.OpenXmlPresentationReader.ReadAll(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Readers.PdfSharpReader">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Readers.PdfSharpReader.ReadAll(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient">
            <summary>
            The http client responsible for connecting Tika content extraction endpoint.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient"/> class.
            </summary>
            <param name="timeout">The request timeout. Set -1 to use unlimited timeout value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient"/> class.
            </summary>
            <param name="timeout">The request timeout. Set -1 to use unlimited timeout value.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaHttpClient.ExtractContent(Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaMediaFileTextExtractor">
            <summary>
            Provides support for the media file content extraction using Apache Tika.
            The additional details can be found by the following link <see href="https://tika.apache.org/" />.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaMediaFileTextExtractor.#ctor(Sitecore.ContentSearch.ContentExtraction.Web.ContentExtractionClient{Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters,System.String},Sitecore.ContentSearch.Abstractions.IO.FileBase,Sitecore.Abstractions.BaseSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaMediaFileTextExtractor"/> class.
            </summary>
            <param name="client">The client object responsible for connecting Tika content extraction endpoint.</param>
            <param name="fileOperations">The instance of the <see cref="T:Sitecore.ContentSearch.Abstractions.IO.FileBase"/> class responsible for file operations.</param>
            <param name="settings"></param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaMediaFileTextExtractor.ExtractText(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters">
            <summary>
            Represents the data sent to the Tika service file upload endpoint.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters.#ctor(System.Uri,System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters"/> class.
            </summary>
            <param name="uri"></param>
            <param name="content">The content of the resource, e.g. file stream object.</param>
            <param name="resourceName">The name of the resource, e.g. file name.</param>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters.Uri">
            <summary>
            Gets the service URI.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters.Content">
            <summary>
            Gets the content of the resource.
            </summary>
        </member>
        <member name="P:Sitecore.ContentSearch.ContentExtraction.Tika.TikaRequestParameters.ResourceName">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Web.ContentExtractionClient`2">
            <summary>
            Defines the contract of the content extraction client.
            </summary>
            <typeparam name="TParam">The data sent to the content extraction service.</typeparam>
            <typeparam name="TResult">The result got from the content extraction service.</typeparam>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.ContentExtractionClient`2.ExtractContent(`0)">
            <summary>
            Sends request to the content extraction service. 
            </summary>
            <param name="parameters">The data send to the content extraction service.</param>
            <returns>The result got from the content extraction service.</returns>
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder">
            <summary>
            Represents a creation process of the <see cref="T:System.Net.HttpWebRequest"/> object as a sequence of steps.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder"/> class.
            </summary>
            <param name="uri">The request target URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder.SetTimeout(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder.SetHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder.SendFile(System.IO.Stream,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.HttpWebRequestBuilder.GetRequest">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder">
            <summary>
            Represents a creation process of the <see cref="T:System.Net.WebRequest"/> object as a sequence of steps.
            </summary>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder"/> class.
            </summary>
            <param name="uri">The request target URI.</param>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder.SetTimeout(System.Int32)">
            <summary>
            Sets timeout value for the web request.
            </summary>
            <param name="timeout">The timeout value.</param>
            <returns>Current instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder"/> class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder.SetHeader(System.String,System.String)">
            <summary>
            Sets header value for the web request.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
            <returns>Current instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder"/> class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder.SendFile(System.IO.Stream,System.String)">
            <summary>
            Attaches the file stream to the web request.
            </summary>
            <param name="fileStream">The file content.</param>
            <param name="fileName">The file name.</param>
            <returns>Current instance of the <see cref="T:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder"/> class.</returns>
        </member>
        <member name="M:Sitecore.ContentSearch.ContentExtraction.Web.WebRequestBuilder.GetRequest">
            <summary>
            Returns the <see cref="T:System.Net.WebRequest"/> object created.
            </summary>
            <returns>The web request instance.</returns>
        </member>
    </members>
</doc>
