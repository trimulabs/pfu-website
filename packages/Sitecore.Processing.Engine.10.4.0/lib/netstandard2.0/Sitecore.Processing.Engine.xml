<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Processing.Engine</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Processing.Engine.Agents.BaseAgent">
            <summary>
                Provides basic agent functionality and services.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.BaseAgent.#ctor(Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Abstractions.IAgent},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Creates an agent with basic services.
            </summary>
            <param name="logger">Logger implementation.</param>
            <param name="options">Agent configuration.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> or <paramref name="options"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.BaseAgent.AgentId">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.BaseAgent.Log">
            <summary>
                Logger for all agents.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.BaseAgent.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
                Implemented by subclasses for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAgent"/>.
            </summary>
            <param name="token">Token used to cancel execution.</param>
            <returns>Task reference.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.BlobStorageCleanupAgent">
            <summary>
            Cleans up blob storage data.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.BlobStorageCleanupAgent.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Abstractions.IAgent},Sitecore.Processing.Engine.Storage.Abstractions.IBlobStoreFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Agents.BlobStorageCleanupAgent" /> class.
            </summary>
            <param name="options">Agent configuration.</param>
            <param name="logger">A logger to write diagnostics information to the log.</param>
            <param name="blobStoreFactory">The factory which allows to create a blob storage.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="blobStoreFactory"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.BlobStorageCleanupAgent.RecurringExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Removes expired blobs from the database.
            </summary>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration">
            <summary>
            Adds service registrations for a number of agents.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration})">
            <summary>
            Create a new instance.
            </summary>
            <param name="configuration">The configuration controlling the behavior of this instance.</param>
            <param name="logger">The logger to log messages to.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="configuration"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration.#ctor(Sitecore.Processing.Engine.Agents.ParallelAgentsConfigurationOptions,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration})">
            <summary>
            Create a new instance.
            </summary>
            <param name="options">The options controlling the behavior of this instance.</param>
            <param name="logger">The logger to log messages to.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="options"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.ParallelAgentsConfigurationOptions">
            <summary>
            Options for the <see cref="T:Sitecore.Processing.Engine.Agents.ParallelAgentsConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.ParallelAgentsConfigurationOptions.AgentFixedCount">
            <summary>
            Gets or sets the fixed number of agents to create.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.ParallelAgentsConfigurationOptions.AgentCoreRatio">
            <summary>
            Gets or sets the ratio of agents to CPU cores to create.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.ParallelAgentsConfigurationOptions.AgentConfiguration">
            <summary>
            Gets or sets the configuration of the agents to create.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.RecurringAgent">
            <summary>
            Executes task action in a cycle with configured delay.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.RecurringAgent.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Abstractions.IAgent})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Agents.RecurringAgent" /> class.
            </summary>
            <param name="options">The configuration controlling the behavior of this instance.</param>
            <param name="logger">The logger to log messages to.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="options"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="options:SleepPeriod:SleepPeriod"/> should be greater than 00:00:00.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.RecurringAgent.SleepPeriod">
            <summary>
            Get or sets time period agent sleeps before running again.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.RecurringAgent.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Invokes an action with delay until cancellation is requested.
            </summary>
            <param name="token">Cancellation token that will indicate that request is canceled.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.RecurringAgent.RecurringExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Implements logic expected to be executed recurrently.
            </summary>
            <param name="token">Cancellation token that will indicate request to cancel.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.TaskAgent">
            <summary>
                Gets <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/> items from <see cref="T:Sitecore.Processing.Tasks.Abstractions.ITaskDataProvider"/> and executes until <see cref="T:System.Threading.CancellationToken"/> is canceled.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Agents.TaskAgent.TaskProvider">
            <summary>
                Used to get tasks to execute.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskAgent.#ctor(Sitecore.Processing.Engine.Abstractions.ITaskExecutorResolver,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Abstractions.IAgent},Sitecore.Processing.Engine.ITaskDataProvider,System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Creates new <see cref="T:Sitecore.Processing.Engine.Agents.TaskAgent" />.
            </summary>
            <param name="executorResolver">
                 A resolver to determine executor for a <see cref="T:Sitecore.Processing.Tasks.Abstractions.IProcessingTaskData"/>.
            </param>
            <param name="logger">A logger to write diagnostics information to the log.</param>
            <param name="taskDataProvider">Used to get tasks to execute.</param>
            <param name="serviceProvider">Dependency injection service provider used to activate workers.</param>
            <param name="options">Agent configuration.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="executorResolver"/>, <paramref name="taskDataProvider"/>, <paramref name="serviceProvider"/>
                <paramref name="logger"/>, or <paramref name="options"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskAgent.RecurringExecuteAsync(System.Threading.CancellationToken)">
            <summary>
                Get processing tasks and execute recurrently until cancellation is requested.
            </summary>
            <param name="token">Cancellation token that will indicate request to cancel.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskAgent.GetTaskDataAsync">
            <summary>
                Used to get tasks to be executed in specific order.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.TaskCleanupAgent">
            <summary>
            Removes expired (both completed successfully and failed) tasks from the database.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskCleanupAgent.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.Abstractions.IAgent},Sitecore.Processing.Engine.ITaskDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Agents.TaskCleanupAgent" /> class.
            </summary>
            <param name="options">Agent configuration.</param>
            <param name="logger">A logger to write diagnostics information to the log.</param>
            <param name="taskDataProvider">Task data provider which is used to cleanup expired tasks.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="taskDataProvider"/>, <paramref name="logger"/>, or
                <paramref name="options"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Agents.TaskCleanupAgent.MinimumAge">
            <summary>
            Gets or sets the minimum age of the eligible tasks to be cleaned up.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskCleanupAgent.RecurringExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Removes expired (both completed successfully and failed) tasks from the database.
            </summary>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Agents.TaskExecutorResolver">
            <summary>
                Resolves a <see cref="T:Sitecore.Processing.Engine.BaseExecutor`1"/> for specific <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskExecutorResolver.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Sitecore.Processing.Engine.Abstractions.ITaskServicesFactory)">
            <summary>
                Creates new <see cref="T:Sitecore.Processing.Engine.Agents.TaskExecutorResolver" />.
            </summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> used to initialize this instance.</param>
            <param name="taskServicesFactory">The factory used to create workers and data sources to be used during execution.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="configuration"/> or <paramref name="taskServicesFactory"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Agents.TaskExecutorResolver.ResolveTaskExecutor(System.IServiceProvider,Sitecore.Processing.Engine.Model.ProcessingTaskData,Sitecore.Processing.Common.IAgentId)">
            <summary>
                Resolves a <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> for a specific <paramref name="taskData"/>.
            </summary>
            <param name="provider">The provider that contains services required to create <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/>.</param>
            <param name="taskData">The <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/> to create <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> for.</param>
            <param name="agentId">The id of the <see cref="T:Sitecore.Processing.Engine.Abstractions.IAgent"/> that requests <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/>.</param>
            <returns>A <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> for specific <paramref name="taskData"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="provider"/>, <paramref name="taskData"/>, or <paramref name="agentId"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
                <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Type"/> in <paramref name="taskData"/> contains value that
                is not defined in <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskType"/>.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.AllowedServicesDictionary">
            <summary>
                Represents a map with <see cref="T:System.Type" /> keys and matching <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory" /> value used to
                instantiate the allowed service at runtime.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.AllowedServicesDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Microsoft.Extensions.DependencyInjection.ObjectFactory})">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.AllowedServicesDictionary" /> that is used to map types 
                of allowed services to corresponding <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory" /> factory.
            </summary>
            <param name="dictionary">
                A set of <see cref="T:System.Type"/>s with corresponding <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory" /> to instantiate them. 
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.AllowedServicesDictionary.CreateInstance(System.IServiceProvider,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of allowed service with type defined in <paramref name="typeString"/> using <paramref name="provider"/> 
                to retrieve constructor parameters and <paramref name="options"/> as one of them.
            </summary>
            <param name="provider">
                A provider that contains services required to create an allowed service of type defined in <paramref name="typeString" />.
            </param>
            <param name="typeString">A type name, an instance of which must be created.</param>
            <param name="options">An additional set of options used as a constructor parameter during object creation.</param>
            <returns>
                An allowed service of type defined in <paramref name="typeString"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="provider"/>, <paramref name="typeString"/>, or <paramref name="options"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="typeString"/> is <see cref="F:System.String.Empty"/> or contains only whitespace characters.
            </exception>
            <exception cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException">
                Type, defined in <paramref name="typeString"/> is not found in the 
                <see cref="T:System.Collections.Generic.IDictionary`2"/> passed to <see cref="M:Sitecore.Processing.Engine.AllowedServicesDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Microsoft.Extensions.DependencyInjection.ObjectFactory})"/>.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.AllowedServicesDictionary.CreateInstance``1(System.IServiceProvider,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates a strongly typed instance of allowed service with type defined in 
                <paramref name="typeString"/> using <paramref name="provider"/> to retrieve
                constructor parameters and <paramref name="options"/> as one of them.
            </summary>
            <typeparam name="TCast">The type instantiated allowed service will be casted to.</typeparam>
            <param name="provider">
                A provider that contains services required to create an allowed service of type defined in <paramref name="typeString" />.
            </param>
            <param name="typeString">A type name the instance of which must be created.</param>
            <param name="options">An additional set of options used as a constructor parameter during object creation.</param>
            <returns>
                An allowed service of type defined in <paramref name="typeString"/> casted to <typeparamref name="TCast"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="provider"/>, <paramref name="typeString"/>, or <paramref name="options"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="typeString"/> is <see cref="F:System.String.Empty"/> or contains only whitespace characters.
            </exception>
            <exception cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException">
                Type, defined in <paramref name="typeString"/> is not found in the 
                <see cref="T:System.Collections.Generic.IDictionary`2"/> passed to <see cref="M:Sitecore.Processing.Engine.AllowedServicesDictionary.#ctor(System.Collections.Generic.IDictionary{System.Type,Microsoft.Extensions.DependencyInjection.ObjectFactory})"/>.
            </exception> 
            <exception cref="T:System.InvalidCastException">
                The created allowed service cannot be casted to <typeparamref name="TCast"/>.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.AllowedServicesDictionary.OnFailureToFindType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.BaseTaskOptionsSerializer.#ctor(System.String)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.BaseTaskOptionsSerializer" />.
            </summary>
            <param name="workerType">
                Assembly qualified .NET type name of the worker.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="workerType" /> is null or white space.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.BaseTaskOptionsSerializer.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.BaseTaskOptionsSerializer" />.
            </summary>
            <param name="workerOptions">
                A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to
                worker implementation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="workerOptions" /> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.BaseTaskOptionsSerializer.TypeWorker">
            <summary>
                The assembly qualified name of the worker <see cref="T:System.Type" /> registered with
                <see cref="T:Sitecore.Processing.Engine.TaskManager" />.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.BaseTaskOptionsSerializer.WorkerOptions">
            <summary>
                A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to worker
                implementation.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.BatchEnumerator`1">
            <summary>
                Implementation of <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" /> that wraps
                <see cref="T:Sitecore.XConnect.IAsyncEntityBatchEnumerator`1" />.
            </summary>
            <typeparam name="TEntity">The type of entity returned by the enumerator.</typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.#ctor(Sitecore.XConnect.IAsyncEntityBatchEnumerator{`0},System.Int32)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.BatchEnumerator`1" />.
            </summary>
            <param name="enumerator">The xConnect enumerator to read data from.</param>
            <param name="defaultSplitItemCount">
                The default preferred amount of items in the enumerator returned by
                <see cref="M:Sitecore.Processing.Engine.BatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="enumerator" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="defaultSplitItemCount" /> is less or equal to 0.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.#ctor(Sitecore.XConnect.IAsyncEntityBatchEnumerator{`0},System.Int32,System.Boolean)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.BatchEnumerator`1" />.
            </summary>
            <param name="enumerator">The xConnect enumerator to read data from.</param>
            <param name="defaultSplitItemCount">
                The default preferred amount of items in the enumerator returned by
                <see cref="M:Sitecore.Processing.Engine.BatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)" />.
            </param>
            <param name="isSplitSupported">Value indicates if split operation of enumerator is allowed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="enumerator" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="defaultSplitItemCount" /> is less or equal to 0.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.BatchEnumerator`1.Current">
            <summary>Gets the current element in the iteration.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.BatchEnumerator`1.TotalCount">
            <summary>
                Gets the total number of entities in the set. This is an estimate if <see cref="P:Sitecore.Processing.Engine.BatchEnumerator`1.IsCountEstimated" /> is <c>true</c>.
            </summary>
            <value>
                The estimated entity count.
            </value>
        </member>
        <member name="P:Sitecore.Processing.Engine.BatchEnumerator`1.IsCountEstimated">
            <summary>
                Gets a value indicating whether <see cref="P:Sitecore.Processing.Engine.BatchEnumerator`1.TotalCount" /> is estimated.
            </summary>
            <value>
                <c>true</c> if the count is estimated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Processing.Engine.BatchEnumerator`1.IsSplitSupported">
            <summary>
                Boolean value indicates if split operation of enumerator is allowed.
            </summary>
            <value>
                <c>true</c> if split operation is supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.MoveNextAsync">
            <summary>
                Advances the enumerator to the next element in the sequence, returning the result asynchronously.
            </summary>
            <returns>
                <see cref="T:System.Threading.Tasks.ValueTask"/> containing the result of the operation: true if the enumerator was successfully advanced
                to the next element; false if the enumerator has passed the end of the sequence.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.GetBookmark">
            <summary>
                Gets a bookmark that can be persisted and used to retrieve an enumerator at same position as this enumerator at a
                later point.
            </summary>
            <returns>Returns <see cref="T:System.Array"/> of <see cref="T:System.Byte"/> representing bookmark data.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Advances this enumerator to the next batch of entities.
                This will update the <see cref="P:System.Collections.Generic.IAsyncEnumerator`1.Current" /> property.
            </summary>
            <param name="batchSize">The preferred number of entities to read for each batch.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
                Returns <c>true</c> if enumerator moved <see cref="P:System.Collections.Generic.IAsyncEnumerator`1.Current"/>
                property to next batch; otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)">
            <summary>
                Splits off a new enumerator with the specified preference. After the operation this enumerator
                will contain the entities given by the split preference, and the new enumerator the remaining
                entities. The estimated total count will be updated.
            </summary>
            <param name="splitOptions">The split options to influence split behavior.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>New <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" /> after performing split operation.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.BatchEnumerator`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Configuration.TaskServiceDecoratorDescriptor">
            <summary>
            Describes a decorator for a task service.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Configuration.TaskServiceDecoratorDescriptor.Type">
            <summary>
            Gets the <see cref="P:Sitecore.Processing.Engine.Configuration.TaskServiceDecoratorDescriptor.Type"/> of the decorator.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Configuration.TaskServiceDecoratorDescriptor.LevelNumber">
            <summary>
            Gets the order to apply the decorator.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor">
            <summary>
            Describes a service used in task processing.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor.Type">
            <summary>
            Gets the <see cref="P:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor.Type"/> which implements the service.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor.Decorators">
            <summary>
            Gets the list of decorators to apply to the service.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Constants">
            <summary>
                The set of constants used throughout the Sitecore Processing Engine.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.ProcessingSectionName">
            <summary>
                Configuration section name for Processing Engine.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.XсonnectSectionName">
            <summary>
                Configuration section name for XConnect.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DeferredWorkerInterfaceType">
            <summary>
                A type of the interface that defines a deferred worker.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DistributedWorkerInterfaceType">
            <summary>
                A type of the interface that defines a distributed worker.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DataSourceInterfaceType">
            <summary>
                A type of the interface that defines a data source.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DefaultRetryerFactoryRetryAttemptsKey">
            <summary>
                Configuration option key for <see cref="T:Sitecore.Processing.Engine.DefaultRetryerFactory"/> that specifies amount of times an operation
                will be retried in case of unexpected failure.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DefaultRetryerFactoryRetryIntervalKey">
            <summary>
                Configuration option key for <see cref="T:Sitecore.Processing.Engine.DefaultRetryerFactory"/> that specifies the interval between retry attempts.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.AgentHostAgentsShutdownTimeoutKey">
            <summary>
                Configuration option key for <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost"/> that specifies the timeout given to <see cref="T:Sitecore.Processing.Engine.Abstractions.IAgent"/> instances
                for graceful shutdown.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.RetryerNameKey">
            <summary>
                Configuration option key for <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost"/> that specifies the name of the <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> to
                get from <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryerRegistry"/>.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.DefaultAgentRetryerName">
            <summary>
                Name of the Retryer for <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost"/> operations.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Constants.EnableWebHostSettingKey">
            <summary>
            The key of the app setting that specifies whether web host is enabled.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.CursorBatchDataReader`1">
            <summary>
                Allows to retrieve <see cref="T:Sitecore.Processing.Engine.Abstractions.Batch`1" /> from <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1" /> passing
                <see cref="P:Sitecore.Processing.Cursors.Abstractions.ICursor.Bookmark" /> to <see cref="M:Sitecore.Processing.Engine.Abstractions.IDataSource`1.CreateBatchEnumeratorAsync(System.Byte[])" /> method.
            </summary>
            <typeparam name="TEntity">The type of entities to read.</typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.#ctor(Sitecore.Processing.Common.IAgentId,Sitecore.Processing.Engine.Abstractions.IDataSource{`0},Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider,System.Int32,System.Int64)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.CursorBatchDataReader`1" />.
            </summary>
            <param name="agentId">
                The id of the <see cref="T:Sitecore.Processing.Engine.Abstractions.IAgent" /> to use as an <see cref="P:Sitecore.Processing.Cursors.Abstractions.ICursor.Owner" />.
            </param>
            <param name="dataSource">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1" /> to read data from.</param>
            <param name="cursorDataProvider">The provider to manipulate <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursor" /> instances.</param>
            <param name="batchSize">
                The preferred size of the <see cref="T:Sitecore.Processing.Engine.Abstractions.Batch`1" /> to
                return from <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)" />.
            </param>
            <param name="minAmountOfItemsToSplit">
                The minimum amount of remaining items (<see cref="P:Sitecore.Processing.Cursors.Abstractions.ICursor.Size" /> - <see cref="P:Sitecore.Processing.Cursors.Abstractions.ICursor.Consumed" />)
                in the <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursor" /> to allow
                <see cref="M:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)" /> operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="agentId" />, <paramref name="dataSource" />, or
                <paramref name="cursorDataProvider" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="batchSize" /> or <paramref name="minAmountOfItemsToSplit" />
                is less than or equal to 0.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously retrieves the next <see cref="T:Sitecore.Processing.Engine.Abstractions.Batch`1" /> with entities.
            </summary>
            <param name="cancellationToken">A token to communicate cancellation request.</param>
            <returns>
                Next <see cref="T:Sitecore.Processing.Engine.Abstractions.Batch`1" /> with entities if data is available. Otherwise, returns null.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)" /> is called before the previous batch
                is marked as processed using <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.MarkProcessedAsync(System.Threading.CancellationToken)" />.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.MarkProcessedAsync(System.Threading.CancellationToken)">
            <summary>
                Marks last batch retrieved by <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)" /> as processed.
            </summary>
            <param name="cancellationToken">A token to communicate cancellation request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents a status of asynchronous operation.</returns>
            <exception cref="T:System.InvalidOperationException">
                <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.MarkProcessedAsync(System.Threading.CancellationToken)" /> is called before call to
                <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)" /> or
                <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.MarkProcessedAsync(System.Threading.CancellationToken)" /> is called more than once after
                call to <see cref="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.TryGetNextAsync(System.Threading.CancellationToken)" />.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.CursorBatchDataReader`1.GetTotalCountAsync(System.Threading.CancellationToken)">
            <summary>
                Gets the total count of entities available to be read.
            </summary>
            <param name="cancellationToken">A token to communicate cancellation request.</param>
            <returns>Total count of entities available to be read by the cursor if available. Otherwise, returns null.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.CursorBatchDataReaderFactory">
            <summary>
                Allows to create instances of <see cref="T:Sitecore.Processing.Engine.CursorBatchDataReader`1"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.CursorBatchDataReaderFactory.Create``1(Sitecore.Processing.Common.IAgentId,Sitecore.Processing.Engine.Abstractions.IDataSource{``0},Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider,System.Int32,System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.DataExtraction.ContactDataSource">
            <summary>
                Represents an <see cref="T:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1" /> for <see cref="T:Sitecore.XConnect.Contact" /> entities.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.DataExtraction.ContactDataSource.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DataSources.DataExtraction.ContactDataSource" />.
            </summary>
            <param name="xdbContext">
                The context to retrieve data from xConnect using Data Extraction.
            </param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.DataExtraction.ContactDataSource.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.DataExtraction.ContactDataSource.CreateBatchEnumeratorAsync(System.Byte[])">
            <summary>
                Asynchronously creates an asynchronous enumerator, which returns batches of
                <see cref="T:Sitecore.XConnect.Contact" /> entities.
            </summary>
            <param name="bookmark">
                The initial bookmark to create the enumerator.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task`1" /> which represents a token of asynchronous operation
                that will return an <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" /> for <see cref="T:Sitecore.XConnect.Contact" /> entities.
            </returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.DataExtraction.InteractionDataSource">
            <summary>
                Represents an <see cref="T:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1" /> for <see cref="T:Sitecore.XConnect.Interaction" /> entities.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.DataExtraction.InteractionDataSource.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DataSources.DataExtraction.InteractionDataSource" />.
            </summary>
            <param name="xdbContext">
                The context to retrieve data from xConnect using Data Extraction.
            </param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.DataExtraction.InteractionDataSource.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.DataExtraction.InteractionDataSource.CreateBatchEnumeratorAsync(System.Byte[])">
            <summary>
                Asynchronously creates an asynchronous enumerator, which returns batches of
                <see cref="T:Sitecore.XConnect.Interaction" /> entities.
            </summary>
            <param name="bookmark">
                The initial bookmark to create the enumerator.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task`1" /> which represents a token of asynchronous operation
                that will return an <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" /> for <see cref="T:Sitecore.XConnect.Interaction" /> entities.
            </returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource">
            <summary>
                Represents a <see cref="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2" /> for <see cref="T:Sitecore.XConnect.Contact" /> entities.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates new <see cref="T:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource"/> instance.
            </summary>
            <param name="xdbContext">The context to retrieve data from xConnect.</param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource.DoCreateBatchEnumeratorAsync(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource.CreateOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.ContactSearchDataSource.CreateDataSourceOptionsOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource">
            <summary>
                Represents a <see cref="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2" /> for <see cref="T:Sitecore.XConnect.Interaction" /> entities.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates new <see cref="T:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource"/> instance.
            </summary>
            <param name="xdbContext">The context to retrieve data from xConnect.</param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource.DoCreateBatchEnumeratorAsync(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource.CreateOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.InteractionSearchDataSource.CreateDataSourceOptionsOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2">
            <summary>
                Represents a base class for data sources that use xConnect Search functionality to get entities.
            </summary>
            <typeparam name="TEntity">The type of entity to retrieve.</typeparam>
            <typeparam name="TExpandOptions">
                The type of <see cref="T:Sitecore.XConnect.ExpandOptions" /> to expand entities in <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/>
                retrieved using <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])"/> method.
            </typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates new <see cref="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2"/> instance.
            </summary>
            <param name="xdbContext">The context to retrieve data from xConnect.</param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
        </member>
        <member name="P:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.SearchOptions">
            <summary>
                Gets the <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/> that influence
                behavior of <see cref="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.DataSourceOptionsOptions">
            <summary>
                Gets the <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/> that influence
                behavior of <see cref="T:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.DoCreateBatchEnumeratorAsync(System.Byte[])">
            <summary>
                Asynchronously creates the instance of <see cref="T:Sitecore.XConnect.IAsyncEntityBatchEnumerator`1"/>.
            </summary>
            <param name="bookmark">The initial bookmark to create the enumerator.</param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task`1" /> which represents a token of asynchronous operation
                that will return an <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <summary>
                Creates <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/> instance.
            </summary>
            <param name="searchRequest">
                The search request that contains all the required data to execute search operation.
            </param>
            <param name="maxBatchSize">
                The maximum size of the batch which <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />
                created by <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])" />
                method will return.
            </param>
            <param name="defaultSplitItemCount">
                The default preferred amount of items in the <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />
                returned by <see cref="M:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)" />.
            </param>
            <returns>
                The instance of <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateDataSourceOptionsOptions(Sitecore.XConnect.Search.SearchRequest,System.Int32,System.Int32)">
            <summary>
                Creates <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/> instance.
            </summary>
            <param name="searchRequest">
                The search request that contains all the required data to execute search operation.
            </param>
            <param name="maxBatchSize">
                The maximum size of the batch which <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />
                created by <see cref="M:Sitecore.Processing.Engine.DataSources.Search.SearchDataSource`2.CreateBatchEnumeratorAsync(System.Byte[])" />
                method will return.
            </param>
            <param name="defaultSplitItemCount">
                The default preferred amount of items in the <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />
                returned by <see cref="M:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)" />.
            </param>
            <returns>
                The instance of <see cref="T:Sitecore.Processing.Tasks.Options.DataSources.Search.SearchDataSourceOptionsDictionary`1"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1">
            <summary>
                Represents a base class for data sources that use xConnect to get entities.
            </summary>
            <typeparam name="TEntity">The type of entity to retrieve.</typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.#ctor(Sitecore.XConnect.IReadOnlyXdbContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1" />.
            </summary>
            <param name="xdbContext">
                The context to retrieve data from xConnect.
            </param>
            <param name="options">
                The list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="xdbContext" /> or <paramref name="options" /> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.XdbContext">
            <summary>
                Gets the context to retrieve data from xConnect.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.Options">
            <summary>
                Gets the list of options to influence <see cref="M:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.CreateBatchEnumeratorAsync(System.Byte[])" /> operation.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DataSources.XConnectDataSource`1.CreateBatchEnumeratorAsync(System.Byte[])">
            <summary>
                Asynchronously creates an asynchronous enumerator, which returns batches of entities.
            </summary>
            <param name="bookmark">
                The initial bookmark to create the enumerator.
            </param>
            <returns>
                A <see cref="T:System.Threading.Tasks.Task`1" /> which represents a token of asynchronous operation
                that will return an <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1" />.
            </returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.DefaultRetryerFactory">
            <summary>
                Represents an <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryerFactory"/> which creates <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances 
                that retry any <see cref="T:System.Exception"/>, unless it is an <see cref="T:System.OperationCanceledException"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DefaultRetryerFactory.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes new <see cref="T:Sitecore.Processing.Engine.DefaultRetryerFactory"/> instance.
            </summary>
            <param name="options">Configuration options to influence <see cref="T:Sitecore.Processing.Engine.DefaultRetryerFactory"/> behavior.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="options"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.DefaultRetryerFactory.Create">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.DeferredTaskOptionsSerializer">
            <summary>
                Represents deferred task options for serialization by <see cref="T:Sitecore.Processing.Engine.TaskManager" />.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DeferredTaskOptionsSerializer.#ctor(System.String)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DeferredTaskOptionsSerializer" />.
            </summary>
            <param name="workerType">
                Assembly qualified .NET type name of the worker.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DeferredTaskOptionsSerializer.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DeferredTaskOptionsSerializer" />.
            </summary>
            <param name="workerOptions">
                A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to
                <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker" /> implementation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="workerOptions"/> is null.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> which logs performance counter data for member calls.
            </summary>
            <typeparam name="TEntity">The type of the entity yielded from the enumerator.</typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.#ctor(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{`0},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.Current">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.TotalCount">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.IsCountEstimated">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.IsSplitSupported">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextCountKey">
            <summary>
                The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync"/> and <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)"/> operations.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextCountPerSecKey">
            <summary>
                The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync"/> and <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)"/> operations.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAverageTimeKey">
            <summary>
                The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync"/> and <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)"/> operations.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAverageTimeBaseKey">
            <summary>
                The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync"/> and <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)"/> operations.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitCountKey">
            <summary>
                The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitCountPerSecKey">
            <summary>
                The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAverageTimeKey">
            <summary>
                The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAverageTimeBaseKey">
            <summary>
                The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.GetBookmark">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.MoveNextAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.SplitAsync(Sitecore.Processing.Engine.Abstractions.SplitOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.AsyncBatchEnumeratorCountersDecorator`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Storage.Abstractions.IBlobStore"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.#ctor(Sitecore.Processing.Engine.Storage.Abstractions.IBlobStore,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.ITaskDataProvider"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.KeyNamespace">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.MaximumBlobSize">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.Transformations">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.GetKeysAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.TryGetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.GetIfNoneMatchAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.PutAsync(System.String,System.Byte[],System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.PutIfMatchAsync(System.String,System.Byte[],System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.UpdateTimeToLiveAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.UpdateTimeToLiveIfMatchAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.RemoveIfMatchAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.RemoveAllAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.BlobStoreCountersDecorator.PurgeExpiredAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.#ctor(Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.TaskId">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.AddAsync(Sitecore.Processing.Cursors.Abstractions.ICursor)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.TryAcquireCursorAsync(Sitecore.Processing.Common.IAgentId)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.MarkCompletedAsync(System.Guid,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.UpdateProgressAsync(System.Guid,System.Guid,System.Byte[],System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.UpdateSizeAsync(System.Guid,System.Guid,System.Byte[],System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.UpdateSplitSupportedAsync(System.Guid,System.Guid,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.SaveSplitAsync(System.Guid,System.Guid,System.Byte[],System.Single,System.Int64,System.Collections.Generic.IReadOnlyList{Sitecore.Processing.Cursors.Abstractions.ICursor})">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.TryRegisterSplitRequestAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.DeleteByTaskAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.GetCursorCountAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.GetTotalNumberOfConsumedItemsAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.CursorDataProviderCountersDecorator.AreAllCursorsCompletedAsync">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Contact},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDataSource{Sitecore.XConnect.Contact},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.CreateBatchEnumeratorCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.CreateBatchEnumeratorCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.ContactDataSourceCountersDecorator.DecorateEnumerator(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Contact})">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Interaction},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataExtractionAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDataSource{Sitecore.XConnect.Interaction},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.CreateBatchEnumeratorCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.CreateBatchEnumeratorCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataExtraction.InteractionDataSourceCountersDecorator.DecorateEnumerator(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Interaction})">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.#ctor(Sitecore.Processing.Engine.Abstractions.IDataSource{`0},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.PerformanceCounters">
            <summary>
            The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> instance to write performance data to.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorCountKey">
            <summary>The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAsync(System.Byte[])"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorCountPerSecKey">
            <summary>The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAsync(System.Byte[])"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAverageTimeKey">
            <summary>The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAsync(System.Byte[])"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAverageTimeBaseKey">
            <summary>The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAsync(System.Byte[])"/> operation.</summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.CreateBatchEnumeratorAsync(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DataSourceCountersDecorator`1.DecorateEnumerator(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{`0})">
            <summary>
            Decorates the provided enumerator with a decorator which logs performance counter data for member calls.
            </summary>
            <param name="enumerator">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <returns>The decorated enumerator.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.DeferredTaskExecutor"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.ITaskExecutor,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator.ExecuteCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator.ExecuteCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator.ExecuteAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DeferredTaskExecutorCountersDecorator.ExecuteAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.DistributedTaskExecutor`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.ITaskExecutor,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator.ExecuteCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator.ExecuteCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator.ExecuteAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.DistributedTaskExecutorCountersDecorator.ExecuteAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey">
            <summary>
            The list of Performance Counter identifiers used by the Processing engine.
            </summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.None">
            <summary>An unknown counter key</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderAddCount">
            <summary>Number of times the 'Add' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderAddCountPerSec">
            <summary>Number of times the 'Add' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderAddAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Add' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderAddAverageTimeBase">
            <summary>Base for TaskDataProviderAddAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetCount">
            <summary>Number of times the 'Get' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetCountPerSec">
            <summary>Number of times the 'Get' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Get' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetAverageTimeBase">
            <summary>Base for TaskDataProviderGetAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskInProgressCount">
            <summary>Number of times the 'PickDistributedTaskInProgress' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskInProgressCountPerSec">
            <summary>Number of times the 'PickDistributedTaskInProgress' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskInProgressAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PickDistributedTaskInProgress' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskInProgressAverageTimeBase">
            <summary>Base for TaskDataProviderPickDistributedTaskInProgressAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskPendingCount">
            <summary>Number of times the 'PickDistributedTaskPending' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskPendingCountPerSec">
            <summary>Number of times the 'PickDistributedTaskPending' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskPendingAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PickDistributedTaskPending' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDistributedTaskPendingAverageTimeBase">
            <summary>Base for TaskDataProviderPickDistributedTaskPendingAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRemoveCount">
            <summary>Number of times the 'Remove' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRemoveCountPerSec">
            <summary>Number of times the 'Remove' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRemoveAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Remove' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRemoveAverageTimeBase">
            <summary>Base for TaskDataProviderRemoveAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDeferredActionCount">
            <summary>Number of times the 'PickDeferredAction' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDeferredActionCountPerSec">
            <summary>Number of times the 'PickDeferredAction' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDeferredActionAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PickDeferredAction' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderPickDeferredActionAverageTimeBase">
            <summary>Base for TaskDataProviderPickDeferredActionAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderCleanUpCount">
            <summary>Number of times the 'CleanUp' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderCleanUpCountPerSec">
            <summary>Number of times the 'CleanUp' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderCleanUpAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'CleanUp' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderCleanUpAverageTimeBase">
            <summary>Base for TaskDataProviderCleanUpAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateTotalCount">
            <summary>Number of times the 'UpdateTotal' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateTotalCountPerSec">
            <summary>Number of times the 'UpdateTotal' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateTotalAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateTotal' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateTotalAverageTimeBase">
            <summary>Base for TaskDataProviderUpdateTotalAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderIncrementProgressCount">
            <summary>Number of times the 'IncrementProgress' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderIncrementProgressCountPerSec">
            <summary>Number of times the 'IncrementProgress' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderIncrementProgressAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'IncrementProgress' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderIncrementProgressAverageTimeBase">
            <summary>Base for TaskDataProviderIncrementProgressAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateStatusCount">
            <summary>Number of times the 'UpdateStatus' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateStatusCountPerSec">
            <summary>Number of times the 'UpdateStatus' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateStatusAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateStatus' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderUpdateStatusAverageTimeBase">
            <summary>Base for TaskDataProviderUpdateStatusAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetDependentTaskIdsCount">
            <summary>Number of times the 'GetDependentTaskIds' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetDependentTaskIdsCountPerSec">
            <summary>Number of times the 'GetDependentTaskIds' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetDependentTaskIdsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetDependentTaskIds' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderGetDependentTaskIdsAverageTimeBase">
            <summary>Base for TaskDataProviderGetDependentTaskIdsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRefreshTaskStatusCount">
            <summary>Number of times the 'RefreshTaskStatus' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRefreshTaskStatusCountPerSec">
            <summary>Number of times the 'RefreshTaskStatus' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRefreshTaskStatusAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'RefreshTaskStatus' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TaskDataProviderRefreshTaskStatusAverageTimeBase">
            <summary>Base for TaskDataProviderRefreshTaskStatusAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTransformationsCount">
            <summary>Number of times the 'Transformations' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTransformationsCountPerSec">
            <summary>Number of times the 'Transformations' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTransformationsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Transformations' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTransformationsAverageTimeBase">
            <summary>Base for BlobStoreTransformationsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetKeysCount">
            <summary>Number of times the 'GetKeys' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetKeysCountPerSec">
            <summary>Number of times the 'GetKeys' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetKeysAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetKeys' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetKeysAverageTimeBase">
            <summary>Base for BlobStoreGetKeysAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreExistsCount">
            <summary>Number of times the 'Exists' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreExistsCountPerSec">
            <summary>Number of times the 'Exists' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreExistsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Exists' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreExistsAverageTimeBase">
            <summary>Base for BlobStoreExistsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTryGetCount">
            <summary>Number of times the 'TryGet' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTryGetCountPerSec">
            <summary>Number of times the 'TryGet' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTryGetAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'TryGet' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreTryGetAverageTimeBase">
            <summary>Base for BlobStoreTryGetAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetIfNoneMatchCount">
            <summary>Number of times the 'GetIfNoneMatch' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetIfNoneMatchCountPerSec">
            <summary>Number of times the 'GetIfNoneMatch' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetIfNoneMatchAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetIfNoneMatch' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreGetIfNoneMatchAverageTimeBase">
            <summary>Base for BlobStoreGetIfNoneMatchAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutCount">
            <summary>Number of times the 'Put' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutCountPerSec">
            <summary>Number of times the 'Put' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Put' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutAverageTimeBase">
            <summary>Base for BlobStorePutAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutIfMatchCount">
            <summary>Number of times the 'PutIfMatch' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutIfMatchCountPerSec">
            <summary>Number of times the 'PutIfMatch' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutIfMatchAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PutIfMatch' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePutIfMatchAverageTimeBase">
            <summary>Base for BlobStorePutIfMatchAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveCount">
            <summary>Number of times the 'UpdateTimeToLive' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveCountPerSec">
            <summary>Number of times the 'UpdateTimeToLive' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateTimeToLive' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveAverageTimeBase">
            <summary>Base for BlobStoreUpdateTimeToLiveAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveIfMatchCount">
            <summary>Number of times the 'UpdateTimeToLiveIfMatch' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveIfMatchCountPerSec">
            <summary>Number of times the 'UpdateTimeToLiveIfMatch' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveIfMatchAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateTimeToLiveIfMatch' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreUpdateTimeToLiveIfMatchAverageTimeBase">
            <summary>Base for BlobStoreUpdateTimeToLiveIfMatchAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveCount">
            <summary>Number of times the 'Remove' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveCountPerSec">
            <summary>Number of times the 'Remove' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Remove' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAverageTimeBase">
            <summary>Base for BlobStoreRemoveAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveIfMatchCount">
            <summary>Number of times the 'RemoveIfMatch' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveIfMatchCountPerSec">
            <summary>Number of times the 'RemoveIfMatch' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveIfMatchAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'RemoveIfMatch' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveIfMatchAverageTimeBase">
            <summary>Base for BlobStoreRemoveIfMatchAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAllCount">
            <summary>Number of times the 'RemoveAll' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAllCountPerSec">
            <summary>Number of times the 'RemoveAll' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAllAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'RemoveAll' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStoreRemoveAllAverageTimeBase">
            <summary>Base for BlobStoreRemoveAllAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePurgeExpiredCount">
            <summary>Number of times the 'PurgeExpired' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePurgeExpiredCountPerSec">
            <summary>Number of times the 'PurgeExpired' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePurgeExpiredAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PurgeExpired' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.BlobStorePurgeExpiredAverageTimeBase">
            <summary>Base for BlobStorePurgeExpiredAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsCount">
            <summary>Number of times the 'GetRows' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsCountPerSec">
            <summary>Number of times the 'GetRows' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetRows' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsAverageTimeBase">
            <summary>Base for TableStoreGetRowsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsOffsetCount">
            <summary>Number of times the 'GetRowsOffset' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsOffsetCountPerSec">
            <summary>Number of times the 'GetRowsOffset' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsOffsetAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetRowsOffset' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetRowsOffsetAverageTimeBase">
            <summary>Base for TableStoreGetRowsOffsetAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePutTableCount">
            <summary>Number of times the 'PutTable' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePutTableCountPerSec">
            <summary>Number of times the 'PutTable' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePutTableAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PutTable' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePutTableAverageTimeBase">
            <summary>Base for TableStorePutTableAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTableStatisticsCount">
            <summary>Number of times the 'GetTableStatistics' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTableStatisticsCountPerSec">
            <summary>Number of times the 'GetTableStatistics' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTableStatisticsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetTableStatistics' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTableStatisticsAverageTimeBase">
            <summary>Base for TableStoreGetTableStatisticsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTablesCount">
            <summary>Number of times the 'GetTables' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTablesCountPerSec">
            <summary>Number of times the 'GetTables' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTablesAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetTables' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreGetTablesAverageTimeBase">
            <summary>Base for TableStoreGetTablesAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveCount">
            <summary>Number of times the 'Remove' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveCountPerSec">
            <summary>Number of times the 'Remove' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Remove' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAverageTimeBase">
            <summary>Base for TableStoreRemoveAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAllCount">
            <summary>Number of times the 'RemoveAll' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAllCountPerSec">
            <summary>Number of times the 'RemoveAll' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAllAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'RemoveAll' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreRemoveAllAverageTimeBase">
            <summary>Base for TableStoreRemoveAllAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreMergeTablesCount">
            <summary>Number of times the 'MergeTables' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreMergeTablesCountPerSec">
            <summary>Number of times the 'MergeTables' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreMergeTablesAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MergeTables' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStoreMergeTablesAverageTimeBase">
            <summary>Base for TableStoreMergeTablesAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePurgeExpiredCount">
            <summary>Number of times the 'PurgeExpired' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePurgeExpiredCountPerSec">
            <summary>Number of times the 'PurgeExpired' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePurgeExpiredAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'PurgeExpired' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TableStorePurgeExpiredAverageTimeBase">
            <summary>Base for TableStorePurgeExpiredAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAddCount">
            <summary>Number of times the 'Add' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAddCountPerSec">
            <summary>Number of times the 'Add' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAddAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Add' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAddAverageTimeBase">
            <summary>Base for CursorDataProviderAddAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryAcquireCursorCount">
            <summary>Number of times the 'TryAcquireCursor' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryAcquireCursorCountPerSec">
            <summary>Number of times the 'TryAcquireCursor' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryAcquireCursorAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'TryAcquireCursor' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryAcquireCursorAverageTimeBase">
            <summary>Base for CursorDataProviderTryAcquireCursorAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderMarkCompletedCount">
            <summary>Number of times the 'MarkCompleted' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderMarkCompletedCountPerSec">
            <summary>Number of times the 'MarkCompleted' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderMarkCompletedAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MarkCompleted' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderMarkCompletedAverageTimeBase">
            <summary>Base for CursorDataProviderMarkCompletedAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateProgressCount">
            <summary>Number of times the 'UpdateProgress' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateProgressCountPerSec">
            <summary>Number of times the 'UpdateProgress' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateProgressAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateProgress' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateProgressAverageTimeBase">
            <summary>Base for CursorDataProviderUpdateProgressAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSizeCount">
            <summary>Number of times the 'UpdateSize' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSizeCountPerSec">
            <summary>Number of times the 'UpdateSize' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSizeAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateSize' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSizeAverageTimeBase">
            <summary>Base for CursorDataProviderUpdateSizeAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSplitSupportedCount">
            <summary>Number of times the 'UpdateSplitSupported' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSplitSupportedCountPerSec">
            <summary>Number of times the 'UpdateSplitSupported' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSplitSupportedAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'UpdateSplitSupported' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderUpdateSplitSupportedAverageTimeBase">
            <summary>Base for CursorDataProviderUpdateSplitSupportedAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderSaveSplitCount">
            <summary>Number of times the 'SaveSplit' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderSaveSplitCountPerSec">
            <summary>Number of times the 'SaveSplit' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderSaveSplitAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'SaveSplit' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderSaveSplitAverageTimeBase">
            <summary>Base for CursorDataProviderSaveSplitAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryRegisterSplitRequestCount">
            <summary>Number of times the 'TryRegisterSplitRequest' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryRegisterSplitRequestCountPerSec">
            <summary>Number of times the 'TryRegisterSplitRequest' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryRegisterSplitRequestAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'TryRegisterSplitRequest' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderTryRegisterSplitRequestAverageTimeBase">
            <summary>Base for CursorDataProviderTryRegisterSplitRequestAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderDeleteByTaskCount">
            <summary>Number of times the 'DeleteByTask' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderDeleteByTaskCountPerSec">
            <summary>Number of times the 'DeleteByTask' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderDeleteByTaskAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'DeleteByTask' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderDeleteByTaskAverageTimeBase">
            <summary>Base for CursorDataProviderDeleteByTaskAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetCursorCountCount">
            <summary>Number of times the 'GetCursorCount' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetCursorCountCountPerSec">
            <summary>Number of times the 'GetCursorCount' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetCursorCountAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetCursorCount' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetCursorCountAverageTimeBase">
            <summary>Base for CursorDataProviderGetCursorCountAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetTotalNumberOfConsumedItemsCount">
            <summary>Number of times the 'GetTotalNumberOfConsumedItems' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetTotalNumberOfConsumedItemsCountPerSec">
            <summary>Number of times the 'GetTotalNumberOfConsumedItems' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetTotalNumberOfConsumedItemsAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'GetTotalNumberOfConsumedItems' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderGetTotalNumberOfConsumedItemsAverageTimeBase">
            <summary>Base for CursorDataProviderGetTotalNumberOfConsumedItemsAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAreAllCursorsCompletedCount">
            <summary>Number of times the 'AreAllCursorsCompleted' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAreAllCursorsCompletedCountPerSec">
            <summary>Number of times the 'AreAllCursorsCompleted' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAreAllCursorsCompletedAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'AreAllCursorsCompleted' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.CursorDataProviderAreAllCursorsCompletedAverageTimeBase">
            <summary>Base for CursorDataProviderAreAllCursorsCompletedAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionMoveNextCount">
            <summary>Number of times the 'MoveNext' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionMoveNextCountPerSec">
            <summary>Number of times the 'MoveNext' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionMoveNextAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MoveNext' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionMoveNextAverageTimeBase">
            <summary>Base for ContactDataExtractionMoveNextAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionSplitCount">
            <summary>Number of times the 'Split' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionSplitCountPerSec">
            <summary>Number of times the 'Split' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionSplitAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Split' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataExtractionSplitAverageTimeBase">
            <summary>Base for ContactDataExtractionSplitAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionMoveNextCount">
            <summary>Number of times the 'MoveNext' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionMoveNextCountPerSec">
            <summary>Number of times the 'MoveNext' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionMoveNextAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MoveNext' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionMoveNextAverageTimeBase">
            <summary>Base for InteractionDataExtractionMoveNextAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionSplitCount">
            <summary>Number of times the 'Split' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionSplitCountPerSec">
            <summary>Number of times the 'Split' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionSplitAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Split' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataExtractionSplitAverageTimeBase">
            <summary>Base for InteractionDataExtractionSplitAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchMoveNextCount">
            <summary>Number of times the 'MoveNext' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchMoveNextCountPerSec">
            <summary>Number of times the 'MoveNext' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchMoveNextAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MoveNext' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchMoveNextAverageTimeBase">
            <summary>Base for ContactSearchMoveNextAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchSplitCount">
            <summary>Number of times the 'Split' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchSplitCountPerSec">
            <summary>Number of times the 'Split' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchSplitAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Split' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchSplitAverageTimeBase">
            <summary>Base for ContactSearchSplitAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchMoveNextCount">
            <summary>Number of times the 'MoveNext' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchMoveNextCountPerSec">
            <summary>Number of times the 'MoveNext' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchMoveNextAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'MoveNext' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchMoveNextAverageTimeBase">
            <summary>Base for InteractionSearchMoveNextAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchSplitCount">
            <summary>Number of times the 'Split' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchSplitCountPerSec">
            <summary>Number of times the 'Split' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchSplitAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Split' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchSplitAverageTimeBase">
            <summary>Base for InteractionSearchSplitAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataSourceCreateBatchEnumeratorCount">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataSourceCreateBatchEnumeratorCountPerSec">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataSourceCreateBatchEnumeratorAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'CreateBatchEnumerator' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactDataSourceCreateBatchEnumeratorAverageTimeBase">
            <summary>Base for ContactDataSourceCreateBatchEnumeratorAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataSourceCreateBatchEnumeratorCount">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataSourceCreateBatchEnumeratorCountPerSec">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataSourceCreateBatchEnumeratorAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'CreateBatchEnumerator' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionDataSourceCreateBatchEnumeratorAverageTimeBase">
            <summary>Base for InteractionDataSourceCreateBatchEnumeratorAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchDataSourceCreateBatchEnumeratorCount">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchDataSourceCreateBatchEnumeratorCountPerSec">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchDataSourceCreateBatchEnumeratorAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'CreateBatchEnumerator' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ContactSearchDataSourceCreateBatchEnumeratorAverageTimeBase">
            <summary>Base for ContactSearchDataSourceCreateBatchEnumeratorAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchDataSourceCreateBatchEnumeratorCount">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchDataSourceCreateBatchEnumeratorCountPerSec">
            <summary>Number of times the 'CreateBatchEnumerator' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchDataSourceCreateBatchEnumeratorAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'CreateBatchEnumerator' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.InteractionSearchDataSourceCreateBatchEnumeratorAverageTimeBase">
            <summary>Base for InteractionSearchDataSourceCreateBatchEnumeratorAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DeferredTaskExecutorExecuteCount">
            <summary>Number of times the 'Execute' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DeferredTaskExecutorExecuteCountPerSec">
            <summary>Number of times the 'Execute' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DeferredTaskExecutorExecuteAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Execute' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DeferredTaskExecutorExecuteAverageTimeBase">
            <summary>Base for DeferredTaskExecutorExecuteAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DistributedTaskExecutorExecuteCount">
            <summary>Number of times the 'Execute' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DistributedTaskExecutorExecuteCountPerSec">
            <summary>Number of times the 'Execute' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DistributedTaskExecutorExecuteAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Execute' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.DistributedTaskExecutorExecuteAverageTimeBase">
            <summary>Base for DistributedTaskExecutorExecuteAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.MergeWorkerRunCount">
            <summary>Number of times the 'Run' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.MergeWorkerRunCountPerSec">
            <summary>Number of times the 'Run' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.MergeWorkerRunAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Run' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.MergeWorkerRunAverageTimeBase">
            <summary>Base for MergeWorkerRunAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TrainingWorkerRunCount">
            <summary>Number of times the 'Run' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TrainingWorkerRunCountPerSec">
            <summary>Number of times the 'Run' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TrainingWorkerRunAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Run' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.TrainingWorkerRunAverageTimeBase">
            <summary>Base for TrainingWorkerRunAverageTime</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ProjectionWorkerRunCount">
            <summary>Number of times the 'Run' operation has been called</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ProjectionWorkerRunCountPerSec">
            <summary>Number of times the 'Run' operation has been called per second</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ProjectionWorkerRunAverageTime">
            <summary>Average elapsed time in milliseconds to complete the 'Run' operation</summary>
        </member>
        <member name="F:Sitecore.Processing.Engine.Diagnostics.PerformanceCounterKey.ProjectionWorkerRunAverageTimeBase">
            <summary>Base for ProjectionWorkerRunAverageTime</summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Contact},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.MoveNextCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.MoveNextCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.SplitCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.SplitCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDataSource{Sitecore.XConnect.Contact},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.CreateBatchEnumeratorCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.CreateBatchEnumeratorCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.ContactSearchDataSourceCountersDecorator.DecorateEnumerator(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Contact})">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Interaction},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.MoveNextCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.MoveNextCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.MoveNextAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.SplitCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.SplitCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchAsyncBatchEnumeratorCountersDecorator.SplitAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDataSource{Sitecore.XConnect.Interaction},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.CreateBatchEnumeratorCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.CreateBatchEnumeratorCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.CreateBatchEnumeratorAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Search.InteractionSearchDataSourceCountersDecorator.DecorateEnumerator(Sitecore.Processing.Engine.Abstractions.IAsyncBatchEnumerator{Sitecore.XConnect.Interaction})">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Storage.Abstractions.ITableStore"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.#ctor(Sitecore.Processing.Engine.Storage.Abstractions.ITableStore,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Storage.Abstractions.ITableStore"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.SchemaName">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.GetRowsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.GetRowsAsync(System.String,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.PutTableAsync(Sitecore.Processing.Engine.Projection.IDataRowEnumerator,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.GetTableStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.GetTablesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.RemoveAllAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.MergeTablesAsync(Sitecore.Processing.Engine.Projection.TableDefinition,System.Collections.Generic.IReadOnlyList{System.String},System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TableStoreCountersDecorator.PurgeExpiredAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Tasks.Abstractions.ITaskDataProvider"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.#ctor(Sitecore.Processing.Engine.ITaskDataProvider,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.ITaskDataProvider"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.AddAsync(Sitecore.Processing.Engine.Model.ProcessingTaskData)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.GetAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.PickDistributedTaskInProgressAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.PickDistributedTaskPendingAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.RemoveAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.PickDeferredActionAsync">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.CleanUpAsync(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.UpdateTotalAsync(System.Guid,System.Guid,System.Nullable{System.Int64})">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.IncrementProgressAsync(System.Guid,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.UpdateStatusAsync(System.Guid,System.Guid,Sitecore.Processing.Engine.Model.ProcessingTaskStatus,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.RefreshTaskStatus(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.GetDependentTaskIdsAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskDataProviderCountersDecorator.CancelTaskAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.ITaskExecutor,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskExecutor"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteCountKey">
            <summary>The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteCountPerSecKey">
            <summary>The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAverageTimeKey">
            <summary>The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAverageTimeBaseKey">
            <summary>The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.TaskExecutorCountersDecorator.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDeferredWorker,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunCountKey">
            <summary>The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunCountPerSecKey">
            <summary>The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAverageTimeKey">
            <summary>The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAverageTimeBaseKey">
            <summary>The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAsync(System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DeferredWorkerCountersDecorator.RunAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDistributedWorker`1"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.#ctor(Sitecore.Processing.Engine.Abstractions.IDistributedWorker{`0},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDistributedWorker`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchCountKey">
            <summary>The performance counter count key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAsync(System.Collections.Generic.IReadOnlyList{`0},System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchCountPerSecKey">
            <summary>The performance counter count per second key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAsync(System.Collections.Generic.IReadOnlyList{`0},System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAverageTimeKey">
            <summary>The performance counter average time key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAsync(System.Collections.Generic.IReadOnlyList{`0},System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAverageTimeBaseKey">
            <summary>The performance counter average time base key used for the <see cref="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAsync(System.Collections.Generic.IReadOnlyList{`0},System.Threading.CancellationToken)"/> operation.</summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1.ProcessBatchAsync(System.Collections.Generic.IReadOnlyList{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDeferredWorker,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator.RunCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator.RunCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator.RunAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.MergeWorkerCountersDecorator.RunAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDistributedWorker`1"/> which logs performance counter data for member calls.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1.#ctor(Sitecore.Processing.Engine.Abstractions.IDistributedWorker{`0},Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Workers.DistributedWorkerCountersDecorator`1"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDistributedWorker`1"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1.ProcessBatchCountKey">
            <summary>The performance counter count key used for the Run operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1.ProcessBatchCountPerSecKey">
            <summary>The performance counter count per second key used for the Run operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1.ProcessBatchAverageTimeKey">
            <summary>The performance counter average time key used for the Run operation.</summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.ProjectionWorkerCountersDecorator`1.ProcessBatchAverageTimeBaseKey">
            <summary>The performance counter average time base key used for the Run operation.</summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator">
            <summary>
            A decorator for <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> which logs performance counter data for member calls.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator.#ctor(Sitecore.Processing.Engine.Abstractions.IDeferredWorker,Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters)">
            <summary>
            Creates a new <see cref="T:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator"/> instance.
            </summary>
            <param name="inner">The <see cref="T:Sitecore.Processing.Engine.Abstractions.IDeferredWorker"/> instance to decorate.</param>
            <param name="performanceCounters">The <see cref="T:Sitecore.XConnect.Diagnostics.Telemetry.IPerformanceCounters"/> to write performance counter data to.</param>
            <exception cref="T:System.ArgumentNullException">
                If <paramref name="inner"/> or <paramref name="performanceCounters"/> is null.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator.RunCountKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator.RunCountPerSecKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator.RunAverageTimeKey">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.Processing.Engine.Diagnostics.Workers.TrainingWorkerCountersDecorator.RunAverageTimeBaseKey">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer">
            <summary>
                Represents distributed task options for serialization by <see cref="T:Sitecore.Processing.Engine.TaskManager" />.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer.#ctor(System.String,System.String)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer" />.
            </summary>
            <param name="dataSourceType">
                Assembly qualified .NET type name of the data source.
            </param>
            <param name="workerType">
                Assembly qualified .NET type name of the worker.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer" />.
            </summary>
            <param name="dataSourceOptions">
                An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to
                <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1" /> implementation.
            </param>
            <param name="workerOptions">
                An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to
                <see cref="T:Sitecore.Processing.Engine.Abstractions.IDistributedWorker`1" /> implementation.
            </param>
        </member>
        <member name="P:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer.TypeDataSource">
            <summary>
                Gets the assembly qualified name of the <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1" /> <see cref="T:System.Type" /> registered with
                <see cref="T:Sitecore.Processing.Engine.TaskManager" />.
            </summary>
        </member>
        <member name="P:Sitecore.Processing.Engine.DistributedTaskOptionsSerializer.DataSourceOptions">
            <summary>
                Gets an <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing options passed to <see cref="T:Sitecore.Processing.Engine.Abstractions.IDataSource`1" />
                implementation.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException">
            <summary>
                Represents an exception thrown by processing engine when there is an exception thrown by the deferred task
                executor.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredTaskExecutorException" /> class with serialized data.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException">
            <summary>
                Represents an exception thrown by processing engine when there is an exception thrown by the deferred worker while
                running.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DeferredWorkerException" /> class with serialized data.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException">
            <summary>
                Represents an exception thrown by processing engine when there is an exception thrown by the distributed task
                executor.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedTaskExecutorException" /> class with serialized data.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException">
            <summary>
                Represents an exception thrown by processing engine when there is an exception thrown by the distributed worker
                while processing a batch.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.DistributedWorkerException" /> class with serialized data.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.TypeMismatchException">
            <summary>
                Represents an exception thrown by processing engine when the type of entity for the worker and the datasource are
                not equal.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeMismatchException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeMismatchException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeMismatchException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeMismatchException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeMismatchException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeMismatchException" /> class with serialized data.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException">
            <summary>
                Represents an exception thrown by processing system when the worker <see cref="T:System.Type" /> or datasource
                <see cref="T:System.Type" /> is not found in the list of approved types.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException" /> class.
            </summary>
            <param name="message">
                The message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a <b>null</b> if the current exception is
                the original exception.
            </param>
        </member>
        <member name="M:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Processing.Engine.Exceptions.TypeNotFoundInAllowedTypesException" /> class.
            </summary>
            <param name="serializationInfo">
                The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="streamingContext">
                The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
                Argument <paramref name="serializationInfo" /> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.Extensions.ServiceProviderExtensions">
            <summary>
            Extension methods for the <see cref="T:System.IServiceProvider"/> interface.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Extensions.ServiceProviderExtensions.Decorate``1(System.IServiceProvider,System.Object,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Decorate an object with additional types.
            </summary>
            <typeparam name="TCast">The type to cast the final object to.</typeparam>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> instance to resolve services from.</param>
            <param name="instance">The object instance to decorate.</param>
            <param name="decoratorTypes">The ordered list of type of decorators to instantiate and wrap the <paramref name="instance"/> with.</param>
            <returns>The decorated instance.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serviceProvider"/> or <paramref name="instance"/> is null.
            </exception>
            <remarks>
                If the decorator is an unbound generic and the service is non-generic, the decorator generic parameter is the type of the service.
                If the decorator is an unbound generic and the service is an unbound generic, the decorator generic parameters are the same type as the service instance generic parameters.
            </remarks>
        </member>
        <member name="T:Sitecore.Processing.Engine.Hosting.AgentHost">
            <summary>
                Implements a host for <see cref="T:Sitecore.Processing.Engine.Abstractions.IAgent"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.#ctor(System.IServiceProvider,Sitecore.Framework.TransientFaultHandling.IRetryerRegistry,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost" /> object.
            </summary>
            <param name="services">The <see cref="T:System.IServiceProvider" /> that contains all the registered services.</param>
            <param name="retryerRegistry">
                The retryer registry that is responsible for managing the creation and access to
                a set of named <see cref="T:Sitecore.Framework.TransientFaultHandling.IRetryer"/> instances.
            </param>
            <param name="options">Configuration to influence <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost"/> behavior.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="services" />, <paramref name="retryerRegistry" />, or <paramref name="options"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
                Retryer with name specified in <paramref name="options"/> is not registered.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.Finalize">
            <summary>
                Finalizer of the <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost" />.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.StartAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously starts a process hosted by <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost" />.
            </summary>
            <param name="cancellationToken">A token to communicate cancellation request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents a status of asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.StopAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously stops the <see cref="T:Sitecore.Processing.Engine.Hosting.AgentHost" />.
            </summary>
            <param name="cancellationToken">A token to communicate cancellation request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents a status of asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.AgentHost.Dispose(System.Boolean)">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether this method called from <see cref="M:Sitecore.Processing.Engine.Hosting.AgentHost.Dispose" /> or from finalizer.</param>
        </member>
        <member name="T:Sitecore.Processing.Engine.Hosting.DependencyResolutionException">
            <summary>
            An exception which is raised when there are issues with dependency resolution.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.DependencyResolutionException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.DependencyResolutionException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.DependencyResolutionException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.Hosting.HostBuilder">
            <summary>
                Represents a type used to build an <see cref="T:Sitecore.Processing.Engine.Abstractions.Hosting.IHost" />.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.HostBuilder.Build(Sitecore.Processing.Engine.Abstractions.Hosting.IHostBuilderOptions)">
            <summary>
                Builds an <see cref="T:Sitecore.Processing.Engine.Abstractions.Hosting.IHost" /> using <paramref name="options" />.
            </summary>
            <param name="options">A set of options to influence build process.</param>
            <returns>The fully functional <see cref="T:Sitecore.Processing.Engine.Abstractions.Hosting.IHost" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.HostBuilder.Build(Sitecore.Processing.Engine.Abstractions.Hosting.IHostBuilderOptions,Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
                Builds an <see cref="T:Sitecore.Processing.Engine.Abstractions.Hosting.IHost" /> using <paramref name="options" /> and <paramref name="configurationBuilder" />.
            </summary>
            <returns>The fully functional <see cref="T:Sitecore.Processing.Engine.Abstractions.Hosting.IHost" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="configurationBuilder" /> is null.</exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.HostBuilder.CreateServiceCollection(Sitecore.Processing.Engine.Abstractions.Hosting.IHostBuilderOptions,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>
                Creates an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> using <paramref name="options" />.
            </summary>
            <param name="options">A set of options to create <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
            <param name="configurationBuilder">Builder for application configuration.</param>
            <param name="configurationEnvironmentName">Override appSettings value for configuration environment name.</param>
            <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> with registered services.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Hosting.HostBuilderOptions">
            <summary>
                Contains a set of options to configure <see cref="M:Sitecore.Processing.Engine.Abstractions.Hosting.IHostBuilder.Build(Sitecore.Processing.Engine.Abstractions.Hosting.IHostBuilderOptions)" /> process.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.Hosting.HostBuilderOptions.#ctor(System.String)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.Hosting.HostBuilderOptions" />.
            </summary>
            <param name="configurationRootPath">A path to the directory that is a root for configuration files.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="configurationRootPath" /> is null, <see cref="F:System.String.Empty" /> or
                contains only whitespace.
            </exception>
        </member>
        <member name="P:Sitecore.Processing.Engine.Hosting.HostBuilderOptions.ConfigurationRootPath">
            <summary>
                Gets a path to the directory that is a root for configuration files.
            </summary>
        </member>
        <member name="T:Sitecore.Processing.Engine.ITaskDataProvider">
            <summary>
                Defines operations to asynchronously manipulate a <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instances in the data store.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.AddAsync(Sitecore.Processing.Engine.Model.ProcessingTaskData)">
            <summary>
                Asynchronously adds given <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to the data store.
            </summary>
            <param name="task">
                An object describing the task to be executed by the agents.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <remarks>
                <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Created" />, <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Updated" /> and <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.ConcurrencyToken" /> in
                the <paramref name="task" /> are ignored, set by the provider, and can differ from specified.
            </remarks>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.GetAsync(System.Guid)">
            <summary>
                Asynchronously gets <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> by its unique identifier.
            </summary>
            <param name="id">
                The unique identifier of <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to look for.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with a <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance containing information about the
                requested task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.GetDependentTaskIdsAsync(System.Guid)">
            <summary>
                Asynchronously gets IDs of the tasks that are dependent on the provided task, either explicitly or transitively.
            </summary>
            <param name="taskId">
                The unique identifier of the task to get the dependencies for.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with the IDs of the tasks that are dependent on the task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.PickDistributedTaskInProgressAsync">
            <summary>
                Asynchronously picks an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> with <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Type" /> equal
                to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskType.DistributedProcessing" />
                and <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Status" /> equal to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Processing" /> with
                enough work items to split.
            </summary>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents distributed
                processing task that is actively processed.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.PickDistributedTaskPendingAsync">
            <summary>
                Asynchronously gets an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> with <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Type" /> equal to
                <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskType.DistributedProcessing" />
                and <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Status" /> equal to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Pending" />.
            </summary>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents distributed
                processing task that is not started yet.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.RemoveAsync(System.Guid)">
            <summary>
                Asynchronously removes the specified task from the data store.
            </summary>
            <param name="taskId">
                The unique identifier of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to remove.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.PickDeferredActionAsync">
            <summary>
                Asynchronously picks an available <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> with
                <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Type" /> equal to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskType.DeferredAction" />,
                disregarding any locked tasks and locking the task for other workers.
            </summary>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents single-threaded
                processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.CleanUpAsync(System.TimeSpan)">
            <summary>
                Asynchronously cleans up all tasks from the data store with <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Status" />
                equal to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Failed" />, <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Completed" />, or
                <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Expired" />.
            </summary>
            <param name="minimumAge">
                The minimum age of the eligible tasks to be cleaned up.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.UpdateTotalAsync(System.Guid,System.Guid,System.Nullable{System.Int64})">
            <summary>
                Asynchronously updates the total count of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" />.
            </summary>
            <param name="taskId">
                Id of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to be updated.
            </param>
            <param name="concurrencyToken">
                The <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.ConcurrencyToken" /> value to ensure we have the latest data for the task.
            </param>
            <param name="totalCount">
                Total count of entities that are available to be processed by the distributed task.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.IncrementProgressAsync(System.Guid,System.Int64)">
            <summary>
                Asynchronously increments <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Progress" />.
            </summary>
            <param name="taskId">
                Id of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to be updated.
            </param>
            <param name="progress">
                Value to be added to the <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.Progress" />.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with a <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.UpdateStatusAsync(System.Guid,System.Guid,Sitecore.Processing.Engine.Model.ProcessingTaskStatus,System.String)">
            <summary>
                Asynchronously updates the status of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" />.
            </summary>
            <param name="taskId">
                Id of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to be updated.
            </param>
            <param name="concurrencyToken">
                The <see cref="P:Sitecore.Processing.Engine.Model.ProcessingTaskDataBasic.ConcurrencyToken" /> value to ensure we have the latest data for the task.
            </param>
            <param name="status">
                Status to be assigned to the task.
            </param>
            <param name="errorText">
                Optional text of the exception associated with the status.
            </param>
            <returns>
                The <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> instance that represents processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.RefreshTaskStatus(System.Guid)">
            <summary>
              Asynchronously updates the status of the task to <see cref="F:Sitecore.Processing.Tasks.Abstractions.ProcessingTaskStatus.Completed"/>
              if all cursors are completed.
            </summary>
            <param name="taskId">Id of the <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" /> to be updated.</param>
            <returns>If task is updated then the <see cref="T:System.Threading.Tasks.Task`1" /> with an <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData" />
            instance that represents processing task; otherwise - <code>null</code>.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.ITaskDataProvider.CancelTaskAsync(System.Guid)">
            <summary>
            Asynchronously cancels a task execution.
            </summary>
            <remarks>
            Currently only cancel distributed tasks is supported.
            </remarks>
            <param name="taskId">The id of the task to be canceled.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1" /> with the task data.
            instance that represents processing task.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.Startup">
            <summary>
                Represents a class that contains bootstrapping logic.
            </summary>
            <remarks>
                This class created by analogy from ASP.NET Core. However, it does not have similar functionality.
                There is no constructor DI or Configure method that will be called by the framework.
                The purpose is to create a similar infrastructure to easily switch to ASP.NET Core hosting, if needed.
            </remarks>
        </member>
        <member name="M:Sitecore.Processing.Engine.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
                Creates an instance of <see cref="T:Sitecore.Processing.Engine.Startup" />.
            </summary>
            <param name="configuration">The configuration of the application.</param>
            <param name="instanceName">The name of the current instance of the application.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="configuration" /> is null.</exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds required system dependencies to <paramref name="services" />.
            </summary>
            <param name="services">The list of the services, where dependencies should be added.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="services" /> is null.</exception>
        </member>
        <member name="T:Sitecore.Processing.Engine.TaskManager">
            <summary>
                Used to register processing task workers for execution.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.#ctor(Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.TaskManager},Sitecore.Processing.Engine.ITaskDataProvider,Sitecore.Processing.Cursors.Abstractions.ICursorDataProviderFactory,Sitecore.Processing.Engine.Abstractions.ITaskServicesFactory,System.Collections.Generic.IEnumerable{Sitecore.Processing.Engine.Model.ITaskOptionsValidator})">
            <summary>
            Creates instance of <see cref="T:Sitecore.Processing.Engine.TaskManager" />.
            </summary>
            <param name="logger">Used to log information about processing tasks.</param>
            <param name="taskProvider">Used to register processing task data.</param>
            <param name="cursorFactory">Used to create <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursor" /> instances for distributed processing tasks.</param>
            <param name="taskServicesFactory">The factory used to instantiate services used in task processing.</param>
            <param name="validators">The <see cref="T:Sitecore.Processing.Engine.Model.ITaskOptionsValidator"/> to be used to validate task registration options.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger" />, <paramref name="taskProvider" />, <paramref name="cursorFactory" />
                or <paramref name="taskServicesFactory"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.RegisterDistributedTaskAsync(Sitecore.Processing.Engine.Abstractions.IDataSourceOptionsCollection,Sitecore.Processing.Engine.Abstractions.IDistributedWorkerOptionsCollection,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
            <summary>
                Registers a distributed task for execution by processing engine.
            </summary>
            <param name="dataSourceOptions">The options passed to the data source implementation.</param>
            <param name="workerOptions">The options passed to the worker implementation.</param>
            <param name="prerequisiteTaskIds">The IDs of the tasks which are prerequisites to this task.</param>
            <param name="expiresAfter">
                Period of time within which task has to be executed. If task is not in Done or Failed state
                when task expiration period ends, any work on it will be stopped and task will be marked as expired.
            </param>
            <returns>Task identifier for registered distributed task.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="dataSourceOptions" /> or <paramref name="workerOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="expiresAfter" /> timespan is less than or equal to zero.
            </exception>
            <exception cref="T:Sitecore.Processing.Common.Exceptions.RegisterTaskException">
                Error occurred during registering processing task with <see cref="T:Sitecore.Processing.Engine.ITaskDataProvider" /> or
                <see cref="T:Sitecore.Processing.Cursors.Abstractions.ICursorDataProvider" />.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.RegisterDeferredTaskAsync(Sitecore.Processing.Engine.Abstractions.IDeferredWorkerOptionsCollection,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
            <summary>
                Registers deferred task with processing engine.
            </summary>
            <param name="workerOptions">The options passed to the worker implementation.</param>
            <param name="prerequisiteTaskIds">The IDs of the tasks which are prerequisites to this task.</param>
            <param name="expiresAfter">
                Period of time within which task has to be executed. If task is not in Done or Failed state
                when task expiration period ends, any work on it will be stopped and task will be marked as expired.
            </param>
            <returns>Task identifier for registered deferred worker.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="workerOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="expiresAfter" /> timespan is less than or equal to zero.
            </exception>
            <exception cref="T:Sitecore.Processing.Common.Exceptions.RegisterTaskException">
                Error occurred during registering processing task with <see cref="T:Sitecore.Processing.Engine.ITaskDataProvider" />.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.GetTaskProgressAsync(System.Guid)">
            <summary>
            Gets the progress of a task given by its <see cref="P:Sitecore.Processing.Tasks.Abstractions.IProcessingTaskData.Id"/>.
            </summary>
            <param name="id">The Id of the task to get the progress for.</param>
            <returns>A task yielding the progress of the processing task if the task exists, otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.RegisterTaskAsync(Sitecore.Processing.Engine.Model.Options.Tasks.DeferredTaskOptions)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.RegisterTaskAsync(Sitecore.Processing.Engine.Model.Options.Tasks.DistributedTaskOptions)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.GetTaskAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.CancelTaskAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManager.Sitecore#Processing#Engine#Abstractions#ITaskManager#CancelTaskAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.Processing.Engine.TaskManagerBase">
            <summary>
              Used to register, cancel and get processing tasks.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManagerBase.RegisterTaskAsync(Sitecore.Processing.Engine.Model.Options.Tasks.DeferredTaskOptions)">
            <summary>
              Registers a deferred task for execution by processing engine.
            </summary>
            <param name="options"> The <see cref="T:Sitecore.Processing.Engine.Model.Options.Tasks.DeferredTaskOptions"/> to register a deferred task. </param>
            <returns>Task identifier of the registered deferred task.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManagerBase.RegisterTaskAsync(Sitecore.Processing.Engine.Model.Options.Tasks.DistributedTaskOptions)">
            <summary>
              Registers a distributed task for execution by processing engine.
            </summary>
            <param name="options"> The <see cref="T:Sitecore.Processing.Engine.Model.Options.Tasks.DistributedTaskOptions"/> to register a distributed task. </param>
            <returns>Task identifier of the registered distributed task.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManagerBase.GetTaskAsync(System.Guid)">
            <summary>
              Returns <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/> by task id.
            </summary>
            <param name="id">The id of the task to get data for.</param>
            <returns>The <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/> instance representing a task information.</returns>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskManagerBase.CancelTaskAsync(System.Guid)">
            <summary>
              Stops task execution.
            </summary>
            <param name="id">The id of the task to stop execution.</param>
            <returns>The <see cref="T:Sitecore.Processing.Engine.Model.ProcessingTaskData"/> instance representing a task information.</returns>
        </member>
        <member name="T:Sitecore.Processing.Engine.TaskServicesFactory">
            <summary>
            An implementation of <see cref="T:Sitecore.Processing.Engine.Abstractions.ITaskServicesFactory"/> which creates services using a <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskServicesFactory.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Processing.Engine.Configuration.TaskServiceDescriptor},Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.TaskServicesFactory})">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Processing.Engine.TaskServicesFactory"/> class.
            </summary>
            <param name="serviceDescriptors">The descriptors of the services that the factory will support instantiation of.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>        
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serviceDescriptors"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="serviceDescriptors"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskServicesFactory.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Sitecore.Processing.Engine.TaskServicesFactory})">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Processing.Engine.TaskServicesFactory"/> class.
            </summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> used to initialize this instance.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to log messages to.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="configuration"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="logger"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskServicesFactory.IsServiceRegistered(System.Type)">
            <summary>
            Checks if a service, given by its type, is registered in the factory.
            </summary>
            <param name="type">The type to be checked.</param>
            <returns><c>True</c> if the service is registered, otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="type"/> is null.
            </exception>
        </member>
        <member name="M:Sitecore.Processing.Engine.TaskServicesFactory.CreateInstance``1(System.IServiceProvider,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
                Creates a strongly typed instance of a task service with type defined in 
                <paramref name="typeName"/> passing <paramref name="options"/> as a constructor parameter.
            </summary>
            <typeparam name="TCast">The type to cast the instantiated service to.</typeparam>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to resolve additional services from.</param>
            <param name="typeName">The name of the type to be created.</param>
            <param name="options">An additional set of options used as a constructor parameter during object creation.</param>
            <returns>
                A new instance of the type given by <paramref name="typeName"/> and cast to <typeparamref name="TCast"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serviceProvider"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="typeName"/> is <see cref="F:System.String.Empty"/> or contains only whitespace characters.
            </exception>
        </member>
    </members>
</doc>
